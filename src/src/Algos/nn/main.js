// import NN_50x50 from './NN_50x50.weight';

let xhr = new XMLHttpRequest();

xhr.onload  = function(){
	Algo_NN.Model = xhr.response;
	console.log((new Algo_NN).NN(JSON.parse
};

xhr.responseType = "arraybuffer";
xhr.open('GET','http://localhost/NN_50x50.php', true);
xhr.send();

export class Algo_NN{
	static Model = null;
	
	constructor(width, height){
		this.onstart = null;
		this.onend = null;
		
		this.ondraw = null;
		this.init(width, height);
	}
	
	init(width, height){
		this.offscreenCanvas = document.createElement('canvas');
		this.offscreenCanvas.width = width;
		this.offscreenCanvas.height = height;
		
		this.offscreenCanvasPerma = document.createElement('canvas');
		this.offscreenCanvasPerma.width = width;
		this.offscreenCanvasPerma.height = height;
		
		this.offscreenCanvasNN = document.createElement('canvas');
		this.offscreenCanvasNN.width = 28;
		this.offscreenCanvasNN.height = 28;
		
		this.offscreenCanvasRescale = document.createElement('canvas');
		this.offscreenCanvasRescale.width = 0;
		this.offscreenCanvasRescale.height = 0;
		
		this.width = width;
		this.height = height;
		
		this.offscreenBuffering = this.offscreenCanvas.getContext('2d', { alpha: false });
		this.offscreenBufferingPerma = this.offscreenCanvasPerma.getContext('2d', { alpha: false });
		this.offscreenBufferingNN = this.offscreenCanvasNN.getContext('2d', { alpha: false });
		this.offscreenBufferingRescale = this.offscreenCanvasRescale.getContext('2d', { alpha: false });
		
		this.offscreenBufferingPerma.save();
			this.offscreenBufferingPerma.fillStyle = 'black';
			this.offscreenBufferingPerma.fillRect(0, 0, this.width, this.height);
		this.offscreenBufferingPerma.restore();
		
		this.offscreenBufferingNN.save();
			this.offscreenBufferingNN.fillStyle = 'grey';
			this.offscreenBufferingNN.fillRect(0, 0, this.width, this.height);
		this.offscreenBufferingNN.restore();
		
		this.offscreenBuffering.lineCap = 'round';
		this.offscreenBufferingPerma.lineCap = 'round';
		
		this.Undo = [];
		this.currUndo = [];
		this.currUndoI = 0;
		this.MaxUndo = 100;
	}
	
	*update(){
		if(this.onstart instanceof Function)
			this.onstart.call(this)();
		
		let deltaT = 0;
		
		while(true){
			let ctx = this.offscreenBuffering;
			
			ctx.save();
				ctx.fillStyle = 'black';
				ctx.fillRect(0, 0, this.width, this.height);
			ctx.restore();
			
			ctx.drawImage(this.offscreenCanvasPerma, 0, 0, this.width, this.height);
			
			ctx.save();
				for(let i = 0; i < this.Undo.length; i++){
					if(i >= this.currUndoI) continue;
					
					for(let j in this.Undo[i])
						this._drawLine(ctx, this.Undo[i][j]);
				}
				
				for(let i in this.currUndo)
					this._drawLine(ctx, this.currUndo[i]);
			ctx.restore();
			
			// console.log(this._getAABBLinear(this._grayscaleToLinear(ctx.getImageData(0, 0, this.width, this.height).data), 100, this.width, this.height));
			
			if(this.ondraw instanceof Function)
				this.ondraw.call(this, deltaT, ctx);
			
			deltaT = yield;
		}
		
		if(this.onend instanceof Function)
			this.onend.call(this);
	}
	
	_drawLine(ctx, parm){
		ctx.strokeStyle = parm.color;
		ctx.lineWidth = parm.size;
		
		ctx.beginPath();
		ctx.moveTo(parm.x1, parm.y1);
		ctx.lineTo(parm.x2, parm.y2);
		ctx.stroke();
	}
	
	startUndo(){
		this.currUndo = [];
	}
	
	endUndo(){
		if(!this.currUndo.length) return;
		
		this.Undo[this.currUndoI++] = this.currUndo;
		this.currUndo = [];
		
		if(this.Undo.length > this.MaxUndo){
			let deleted = this.Undo.splice(0, 1);
			let ctx = this.offscreenBufferingPerma;
			
			for(let i in deleted){
				ctx.save();
					for(let j in deleted[i])
						this._drawLine(ctx, deleted[i][j]);
				ctx.restore();
				
				this.currUndoI--;
			}
		}
	}
	
	brush(x1, y1, x2, y2, size, color){
		[x1, x2, y1, y2] = [x1, x2, y1, y2].map((curr) => Math.floor(curr));
		
		this.currUndo.push({ x1: x1, x2: x2, y1: y1, y2: y2, size: size, color: color });
	}
	
	erase(x1, y1, x2, y2, size){
		[x1, x2, y1, y2] = [x1, x2, y1, y2].map((curr) => Math.floor(curr));
		
		this.currUndo.push({ x1: x1, x2: x2, y1: y1, y2: y2, size: size, color: '#000' });
	}
	
	undo(){
		if(this.currUndo.length)
			this.endUndo();
		
		this.currUndoI--;
		this.currUndoI = Math.max(this.currUndoI, 0);
	}
	
	redo(){
		this.currUndoI++;
		this.currUndoI = Math.min(this.currUndoI, this.Undo.length);
	}
	
	_grayscaleToLinear(img){
		let ret = new Uint8ClampedArray(img.length / 4);
		
		for(let i = 0; i < img.length; i += 4){
			let light = (img[i] + img[i + 1] + img[i + 2]) / 3;
			
			ret[i/4] = light;
		}
		
		return ret;
	}
	
	_getAABBLinear(img, thlds, sizeX, sizeY){
		let [mX, mY, MX, MY] = [sizeX, sizeY, 0, 0];
		
		for(let i = 0; i < img.length; i++){
			let x = i % sizeX;
			let y = Math.floor(i / sizeX);
			
			if(img[i] > thlds){
				mX = Math.min(mX, x);
				MX = Math.max(MX, x);
				mY = Math.min(mY, y);
				MY = Math.max(MY, y);
			}
		}
		
		if(mX == sizeX || MX == 0 || mY == sizeY || MY == 0)
			return false;
		
		return [mX, mY, MX, MY];
	}
	
	_cutImg(img, sX, sY, eX, eY, sizeX, sizeY){
		let NsizeX = eX - sX;
		let NsizeY = eY - sY;
		
		let ret = new Uint8ClampedArray(NsizeX * NsizeY);
		
		for(let i = sX; i < eX; i++)
			for(let j = sY; j < eY; j++)
				ret[(i - sX) + NsizeX * (j - sY)] = img[j * sizeX + i];
		
		return ret;
	}
	
	_LinearToRGBA(img){
		let ret = new Uint8ClampedArray(img.length * 4);
		
		for(let i = 0; i < img.length; i++){
			ret[i*4 + 0] = img[i];
			ret[i*4 + 1] = img[i];
			ret[i*4 + 2] = img[i];
			ret[i*4 + 3] = 255;
		}
		
		return ret;
	}
	
	_preProcessing(img, tctx){
		let gscaled = this._grayscaleToLinear(img.data);
		let AABB = this._getAABBLinear(gscaled, 100, img.width, img.height);
		
		let ctx = this.offscreenBufferingNN;
		let rctx = this.offscreenBufferingRescale;
		
		if(AABB === false) return false;
		
		tctx.save();
			tctx.strokeStyle = 'red';
			tctx.beginPath();
			tctx.moveTo(AABB[0], AABB[1]);
			tctx.lineTo(AABB[2], AABB[1]);
			tctx.lineTo(AABB[2], AABB[3]);
			tctx.lineTo(AABB[0], AABB[3]);
			tctx.lineTo(AABB[0], AABB[1]);
			tctx.stroke();
		tctx.restore();
		
		let x = (AABB[2] + AABB[0]) / 2;
		let y = (AABB[3] + AABB[1]) / 2;
		
		let w = Math.max((AABB[2] - AABB[0]) / 2, (AABB[3] - AABB[1]) / 2) + 30;
		let h = w;
		
		rctx.canvas.width = w * 2;
		rctx.canvas.height = h * 2;
		
		let cutImg = this._cutImg(gscaled, x - w, y - h, x + w, y + h, img.width, img.height);
		
		
		
		// rctx.putImageData(new ImageData(this._LinearToRGBA(this._cutImg(gscaled, x - w, y - h, x + w, y + h, img.width, img.height)), rctx.canvas.width, rctx.canvas.height), 0, 0);
		
		// rctx.save();
			// rctx.lineWidth = 10;
			// rctx.strokeStyle = 'green';
			// rctx.beginPath();
			// rctx.moveTo(0, 0);
			// rctx.lineTo(0, rctx.canvas.height);
			// rctx.lineTo(rctx.canvas.width, rctx.canvas.height);
			// rctx.lineTo(rctx.canvas.width, 0);
			// rctx.lineTo(0, 0);
			// rctx.stroke();
		// rctx.restore();
		
		ctx.drawImage(rctx.canvas, 0, 0, rctx.canvas.width, rctx.canvas.height, 0, 0, ctx.canvas.width, ctx.canvas.height);
		
		// let imga = JSON.parse
		
		// ctx.drawImage(new ImageData(this._LinearToRGBA(imga, 28, 28), ctx.canvas.width, ctx.canvas.height), 0, 0);
		
		return ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);
	}
	
	NN(data){
		if(!Algo_NN.Model === null)
			return false;
		
		let ModelLen = new Int32Array(Algo_NN.Model, 8, 6);
		let Model = new Float64Array(Algo_NN.Model, 32);
		
		for(let i = 0; i < data.length; i++)
			data[i] = (data[i] / 255 - 0.5) * 2;
		
		let offsetBias;
		let layer2 = [];
		let offsetWeight;
		
		offsetWeight = 0;
		offsetBias = offsetWeight + ModelLen[0] * ModelLen[1];
		
		for(let i = 0; i < ModelLen[0]; i++)
			layer2[i] = 0;
		
		for(let i = 0; i < ModelLen[0]; i++){
			for(let j = 0; j < ModelLen[1]; j++)
				layer2[i] += data[j] * Model[i * ModelLen[1] + j + offsetWeight];
			
			layer2[i] += Model[offsetBias + i];
			layer2[i] = 1 / (Math.exp(-layer2[i]) + 1);
		}
		
		let layer3 = [];
		
		offsetWeight = ModelLen[0] * ModelLen[1] + ModelLen[2];
		offsetBias = offsetWeight + ModelLen[3] * ModelLen[4];
		
		for(let i = 0; i < ModelLen[3]; i++){
			layer3[i] = Model[offsetBias + i];
			
			for(let j = 0; j < ModelLen[4]; j++)
				layer3[i] += layer2[j] * Model[i * ModelLen[4] + j + offsetWeight];
		}
		
		let Layer3max = layer3.reduce((prev, curr) => Math.max(prev, curr));
		let result = layer3.map((curr) => Math.exp(curr - Layer3max));
		let div = result.reduce((prev, curr) => prev + curr);
		
		return result.map((curr) => curr / div).reduce((prev, curr, i, arr) => curr > arr[prev] ? i : prev, 0);
	}
}

// function download(blob, name){
	// let link = $('<a/>');

	// link.attr('href', URL.createObjectURL(new Blob([blob.buffer], {type: "octet/stream"})));
	// link.attr('download', 'blob');
	// link[0].click();
	// link.remove();
// }

// window.download = download;