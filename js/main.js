document.write('<script async src=\"http://' + (location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1\"></' + 'script>'); /*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Algos/_helpers/Algo.js":
/*!************************************!*\
  !*** ./src/Algos/_helpers/Algo.js ***!
  \************************************/
/***/ (() => {

eval("class IAlgo{\r\n\tconstructor(){\r\n\t\tthis.onstart = null;\r\n\t\tthis.onend = null;\r\n\t\t\r\n\t\tthis.ondraw = null;\r\n\t}\r\n\t\r\n\t*update(){\r\n\t\tif(this.onstart instanceof Function)\r\n\t\t\tthis.onstart.call(this)();\r\n\t\t\r\n\t\twhile(true){\r\n\t\t\t/* code... */\r\n\t\t\t\r\n\t\t\tlet ret;\r\n\t\t\t\r\n\t\t\tret = new Matrix(10, 10); /* from Matrix.js */\r\n\t\t\tret = new LinearMatrix(10, { x:0, y:0 }); /* from LinearMatrix.js */\r\n\t\t\t\r\n\t\t\tif(this.ondraw instanceof Function)\r\n\t\t\t\tthis.ondraw.call(this, ret /* return val on draw */);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onend instanceof Function)\r\n\t\t\tthis.onend.call(this);\r\n\t}\r\n\t\r\n\t\r\n}\n\n//# sourceURL=webpack:///./src/Algos/_helpers/Algo.js?");

/***/ }),

/***/ "./src/Algos/_helpers/LinearMatrix.js":
/*!********************************************!*\
  !*** ./src/Algos/_helpers/LinearMatrix.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LinearMatrix\": () => (/* binding */ LinearMatrix)\n/* harmony export */ });\nclass ILinearMatrix{\r\n\tconstructor(len, fill = 0){\r\n\t\tthis.fill(len, fill);\r\n\t}\r\n\t\r\n\tfill(len, value){\r\n\t\tthis.Matrix = [];\r\n\t\t\r\n\t\tfor(let x = 0; x < len; x++){\r\n\t\t\tthis.Matrix.push(value);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass LinearMatrix{};\r\n\r\nLinearMatrix = new Proxy(ILinearMatrix, {\r\n\tconstruct(target, args){\r\n\t\treturn new Proxy(new ILinearMatrix(...args), {\r\n\t\t\tget(target, prop, receiver){\r\n\t\t\t\tif(!isNaN(parseInt(prop)))\r\n\t\t\t\t\treturn Reflect.get(target, 'Matrix', receiver)[prop];\r\n\t\t\t\telse if(prop === 'length')\r\n\t\t\t\t\treturn Reflect.get(target, 'Matrix', receiver).length;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn Reflect.get(target, prop, receiver);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tset(target, prop, value, receiver){\r\n\t\t\t\tif(!isNaN(parseInt(prop)))\r\n\t\t\t\t\ttarget.Matrix[prop] = value;\r\n\t\t\t\telse\r\n\t\t\t\t\tReflect.set(target, prop, value, receiver);\r\n\t\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n});\n\n//# sourceURL=webpack:///./src/Algos/_helpers/LinearMatrix.js?");

/***/ }),

/***/ "./src/Algos/_helpers/Matrix.js":
/*!**************************************!*\
  !*** ./src/Algos/_helpers/Matrix.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IMatrix\": () => (/* binding */ IMatrix),\n/* harmony export */   \"Matrix\": () => (/* binding */ Matrix)\n/* harmony export */ });\nclass IMatrix{\r\n\tconstructor(width, height, fill = 0){\r\n\t\tthis.fill(width, height, fill);\r\n\t}\r\n\t\r\n\tfill(width, height, value){\r\n\t\tthis.Matrix = [];\r\n\t\t\r\n\t\tfor(let x = 0; x < width; x++){\r\n\t\t\tthis.Matrix.push([])\r\n\t\t\tlet Matrix = this.Matrix[x];\r\n\t\t\t\r\n\t\t\tfor(let y = 0; y < height; y++){\r\n\t\t\t\tMatrix.push(value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass Matrix{};\r\n\r\nMatrix = new Proxy(IMatrix, {\r\n\tconstruct(target, args){\r\n\t\treturn new Proxy(new IMatrix(...args), {\r\n\t\t\tget(target, prop, receiver){\r\n\t\t\t\tif(!isNaN(parseInt(prop)))\r\n\t\t\t\t\treturn Reflect.get(target, 'Matrix', receiver)[prop];\r\n\t\t\t\telse if(prop === 'length')\r\n\t\t\t\t\treturn Reflect.get(target, 'Matrix', receiver).length;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn Reflect.get(target, prop, receiver);\r\n\t\t\t},\r\n\t\t});\r\n\t},\r\n});\n\n//# sourceURL=webpack:///./src/Algos/_helpers/Matrix.js?");

/***/ }),

/***/ "./src/Algos/_helpers/Random.js":
/*!**************************************!*\
  !*** ./src/Algos/_helpers/Random.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Random\": () => (/* binding */ Random)\n/* harmony export */ });\nclass Random{\r\n\tstatic randF(min = Number.MAX_VALUE, max = Number.MAX_VALUE){\r\n\t\tif(min === max && min === Number.MAX_VALUE) min = 0;\r\n\t\t\r\n\t\treturn Math.random() * (max - min) + min;\r\n\t}\r\n\t\r\n\tstatic randI(min = Number.MAX_VALUE, max = Number.MAX_VALUE){\r\n\t\treturn Math.floor(Random.randF(min, max));\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/_helpers/Random.js?");

/***/ }),

/***/ "./src/Algos/_helpers/Vector.js":
/*!**************************************!*\
  !*** ./src/Algos/_helpers/Vector.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Vector\": () => (/* binding */ Vector)\n/* harmony export */ });\nclass _Vector{\r\n\tconstructor(x = 0, y = null){\r\n\t\tif(y === null){\r\n\t\t\tthis.x = this.y = x;\r\n\t\t}else{\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// constructor(x, y = null){\r\n\t\t// if(x instanceof Object){\r\n\t\t\t// if(x instanceof Array){\r\n\t\t\t\t// this.x = x[0] || 0;\r\n\t\t\t\t// this.y = x[1] || 0;\r\n\t\t\t\t\r\n\t\t\t\t// return;\r\n\t\t\t// }\r\n\t\t\t\r\n\t\t\t// if (x.y !== undefined) this.y = x.y || 0;\r\n\t\t\t// if (x.x !== undefined) this.x = x.x || 0;\r\n\t\t\t\r\n\t\t\t// return;\r\n\t\t// }\r\n\r\n\t\t// if(y == null){\r\n\t\t\t// this.x = this.y = x || 0;\r\n\t\t// }else{\r\n\t\t\t// this.x = x || 0;\r\n\t\t\t// this.y = y || 0;\r\n\t\t// }\r\n\t// }\r\n\t\r\n\taddX(x){\r\n\t\tif(x instanceof _Vector)\r\n\t\t\treturn new _Vector(this.x + x.x, this.y);\r\n\t\telse\r\n\t\t\treturn new _Vector(this.x + x, this.y);\r\n\t}\r\n\t\r\n\taddY(y){\r\n\t\tif(y instanceof _Vector)\r\n\t\t\treturn new _Vector(this.x, this.y + y.y);\r\n\t\telse\r\n\t\t\treturn new _Vector(this.x, this.y + y);\r\n\t}\r\n\t\r\n\tadd(vec){\r\n\t\tif(vec instanceof _Vector)\r\n\t\t\treturn new _Vector(this.x + vec.x, this.y + vec.y);\r\n\t\telse\r\n\t\t\treturn new _Vector(this.x + vec, this.y + vec);\r\n\t}\r\n\t\r\n\t\r\n\tsubX(x){\r\n\t\tif(x instanceof _Vector)\r\n\t\t\treturn new _Vector(this.x - x.x, this.y);\r\n\t\telse\r\n\t\t\treturn new _Vector(this.x - x, this.y);\r\n\t}\r\n\t\r\n\tsubY(y){\r\n\t\tif(y instanceof _Vector)\r\n\t\t\treturn new _Vector(this.x, this.y - y.y);\r\n\t\telse\r\n\t\t\treturn new _Vector(this.x, this.y - y);\r\n\t}\r\n\t\r\n\tsub(vec){\r\n\t\tif(vec instanceof _Vector)\r\n\t\t\treturn new _Vector(this.x - vec.x, this.y - vec.y);\r\n\t\telse\r\n\t\t\treturn new _Vector(this.x - vec, this.y - vec);\r\n\t}\r\n\t\r\n\t\r\n\tdivX(x){\r\n\t\tif(x instanceof _Vector)\r\n\t\t\treturn new _Vector(this.x / x.x, this.y);\r\n\t\telse\r\n\t\t\treturn new _Vector(this.x / x, this.y);\r\n\t}\r\n\t\r\n\tdivY(y){\r\n\t\tif(y instanceof _Vector)\r\n\t\t\treturn new _Vector(this.x, this.y / y.y);\r\n\t\telse\r\n\t\t\treturn new _Vector(this.x, this.y / y);\r\n\t}\r\n\t\r\n\tdiv(vec){\r\n\t\tif(vec instanceof _Vector)\r\n\t\t\treturn new _Vector(this.x / vec.x, this.y / vec.y);\r\n\t\telse\r\n\t\t\treturn new _Vector(this.x / vec, this.y / vec);\r\n\t}\r\n\t\r\n\t\r\n\tmulX(x){\r\n\t\tif(x instanceof _Vector)\r\n\t\t\treturn new _Vector(this.x * x.x, this.y);\r\n\t\telse\r\n\t\t\treturn new _Vector(this.x * x, this.y);\r\n\t}\r\n\t\r\n\tmulY(y){\r\n\t\tif(y instanceof _Vector)\r\n\t\t\treturn new _Vector(this.x, this.y * y.y);\r\n\t\telse\r\n\t\t\treturn new _Vector(this.x, this.y * y);\r\n\t}\r\n\t\r\n\tmul(vec){\r\n\t\tif(vec instanceof _Vector)\r\n\t\t\treturn new _Vector(this.x * vec.x, this.y * vec.y);\r\n\t\telse\r\n\t\t\treturn new _Vector(this.x * vec, this.y * vec);\r\n\t}\r\n\t\r\n\t\r\n\tinvX(){\r\n\t\treturn new _Vector(this.x * -1, this.y);\r\n\t}\r\n\t\r\n\tinvY(){\r\n\t\treturn new _Vector(this.x, this.y * -1);\r\n\t}\r\n\t\r\n\tinv(){\r\n\t\treturn new _Vector(this.x  * -1, this.y  * -1);\r\n\t}\r\n\t\r\n\tsetX(x){ return new _Vector(x, this.y); }\r\n\tsetY(y){ return new _Vector(this.x, y); }\r\n\t\r\n\ttoAngle(){ return Math.atan2(this.y, this.x); }\r\n\t\r\n\tnormalize(){\r\n\t\tif(this.length() === 0) return new _Vector(0, 0);\r\n\t\treturn this.div(this.length());\r\n\t}\r\n\t\r\n\tlimit(max, factor){\r\n\t\tlet x = this.x;\r\n\t\tlet y = this.y;\r\n\t\t\r\n\t\tif(Math.abs(x) > max){ x *= factor; }\r\n\t\tif(Math.abs(y) > max){ y *= factor; }\r\n\t\t\r\n\t\treturn new _Vector(x, y);\r\n\t}\r\n\t\r\n\trandomize(vec){\r\n\t\treturn new _Vector(\r\n\t\t\t_Vector.random(Math.min(this.x, vec.x), Math.max(this.x, vec.x)),\r\n\t\t\t_Vector.random(Math.min(this.y, vec.y), Math.max(this.y, vec.y)),\r\n\t\t);\r\n\t}\r\n\t\r\n\trandomizeX(vec1, vec2){\r\n\t\treturn new _Vector(_Vector.random(Math.min(vec1.x, vec2.x), Math.max(vec1.x, vec2.x)), this.y);\r\n\t}\r\n\t\r\n\trandomizeY(vec1, vec2){\r\n\t\treturn new _Vector(this.x, _Vector.random(Math.min(vec1.y, vec2.y), Math.max(vec1.y, vec2.y)));\r\n\t}\r\n\t\r\n\trandomizeAny(vec1, vec2){\r\n\t\tif(!!Math.round(Math.random()))\r\n\t\t\treturn this.randomizeX(vec1, vec2);\r\n\t\telse\r\n\t\t\treturn this.randomizeY(vec1, vec2);\r\n\t}\r\n\t\r\n\tround(){\r\n\t\treturn new _Vector(Math.round(this.x), Math.round(this.y));\r\n\t}\r\n\t\r\n\tfloor(){\r\n\t\treturn new _Vector(Math.floor(this.x), Math.floor(this.y));\r\n\t}\r\n\t\r\n\tceil(){\r\n\t\treturn new _Vector(Math.ceil(this.x), Math.ceil(this.y));\r\n\t}\r\n\t\r\n\tlog2(){\r\n\t\treturn new _Vector(Math.log2(this.x), Math.log2(this.y));\r\n\t}\r\n\t\r\n\tlog(){\r\n\t\treturn new _Vector(Math.log(this.x), Math.log(this.y));\r\n\t}\r\n\t\r\n\texp(){\r\n\t\treturn new _Vector(Math.exp(this.x), Math.exp(this.y));\r\n\t}\r\n\t\r\n\ttoFixed(precision = 8){\r\n\t\treturn new _Vector(this.x.toFixed(precision), this.y.toFixed(precision));\r\n\t}\r\n\t\r\n\tmixX(vec, amount = 0.5){\r\n\t\treturn new _Vector((1 - amount) * this.x + amount * vec.x, y);\r\n\t}\r\n\t\r\n\tmixY(vec, amount = 0.5){\r\n\t\treturn new _Vector(x, (1 - amount) * this.y + amount * vec.y);\r\n\t}\r\n\t\r\n\tmix(vec, amount = 0.5){\r\n\t\treturn new _Vector((1 - amount) * this.x + amount * vec.x, (1 - amount) * this.y + amount * vec.y);\r\n\t}\r\n\t\r\n\tdot(vec){\r\n\t\treturn this.x * vec.x + this.y * vec.y;\r\n\t}\r\n\t\r\n\tcross(vec){\r\n\t\treturn this.x * vec.y - this.y * vec.x;\r\n\t}\r\n\t\r\n\tprojectOnto(vec){\r\n\t\tlet coeff = this.dot(vec) / vec.dot(vec);\r\n\t\treturn new _Vector(vec.x * coeff, vec.y * coeff);\r\n\t}\r\n\t\r\n\thorizontalAngle(){\r\n\t\treturn Math.atan2(this.x, this.y);\r\n\t}\r\n\t\r\n\tverticalAngle(){\r\n\t\treturn Math.atan2(this.y, this.x);\r\n\t}\r\n\t\r\n\thorizontalAngleDeg(){\r\n\t\treturn this.rad2deg(Math.atan2(this.x, this.y));\r\n\t}\r\n\t\r\n\tverticalAngleDeg(){\r\n\t\treturn this.rad2deg(Math.atan2(this.y, this.x));\r\n\t}\r\n\t\r\n\t// angle = this.horizontalAngle;\r\n\t// angleDeg = this.horizontalAngleDeg;\r\n\t// direction = this.horizontalAngle;\r\n\t\r\n\trotate(ang){\r\n\t\tlet cs = Math.cos(ang);\r\n\t\tlet sn = Math.sin(ang);\r\n\t\t\r\n\t\treturn new _Vector(\r\n\t\t\tthis.x * cs - this.y * sn,\r\n\t\t\tthis.x * sn + this.y * cs\r\n\t\t);\r\n\t}\r\n\t\r\n\trotateDeg(ang){\r\n\t\treturn this.rotate(this.deg2rad(ang));\r\n\t}\r\n\t\r\n\trotateTo(ang){\r\n\t\treturn this.rotate(ang - this.horizontalAngle());\r\n\t}\r\n\t\r\n\trotateToDeg(ang){\r\n\t\treturn this.rotate(this.deg2rad(ang) - this.horizontalAngle());\r\n\t}\r\n\t\r\n\trotateBy(ang){\r\n\t\treturn this.rotate(ang + this.ang());\r\n\t}\r\n\t\r\n\trotateByDeg(ang){\r\n\t\treturn this.rotate(this.deg2rad(ang) + this.ang());\r\n\t}\r\n\t\r\n\tdistX(vec){ return this.x - vec.x; }\r\n\tdistXabs(vec){ return Math.abs(this.x - vec.x); }\r\n\t\r\n\tdistY(vec){ return this.y - vec.y; }\r\n\tdistYabs(vec){ return Math.abs(this.y - vec.y); }\r\n\t\r\n\tdist(vec){ return Math.sqrt(this.distX(vec) ** 2 + this.distY(vec) ** 2); }\r\n\t\r\n\tlength(){ return Math.sqrt(this.x ** 2 + this.y ** 2); }\r\n\t\r\n\tisZero(){ return this.x === 0 && this.y === 0; }\r\n\tisEqual(vec){ return this.x === vec.x && this.y === vec.y; }\r\n\tisNaN(){ return isNaN(this.x) || isNaN(this.y); }\r\n\t\r\n\ttoString(){ return '[x:' + this.x + ', y:' + this.y + ']'; }\r\n\ttoArray(){ return [this.x, this.y]; }\r\n\ttoObject(){ return { x: this.x, y: this.y }; }\r\n\r\n\tstatic random(min, max){ return Math.random() * (max - min) + min; }\r\n\r\n\tstatic rad2deg(rad){ return rad * _degrees; }\r\n\tstatic deg2rad(deg){ return deg / _degrees; }\r\n\t\r\n\t// clone(){ return this; }\r\n\t\r\n\t*[Symbol.iterator](){\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\t}\r\n}\r\n\r\nconst _degrees = 180 / Math.PI;\r\n\r\nlet Vector = _Vector;\r\n\r\n// export function Vector(...args){\r\n\t// return new _Vector(...args);\r\n// }\n\n//# sourceURL=webpack:///./src/Algos/_helpers/Vector.js?");

/***/ }),

/***/ "./src/Algos/_helpers/Vector_.js":
/*!***************************************!*\
  !*** ./src/Algos/_helpers/Vector_.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Vector_\": () => (/* binding */ Vector_)\n/* harmony export */ });\nclass _Vector{\r\n\tconstructor(x = 0, y = null){\r\n\t\tif(y === null){\r\n\t\t\tthis.x = this.y = x;\r\n\t\t}else{\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\t}\r\n\t\r\n\taddX(x){ this.x += x.x; return this; }\r\n\taddXs(x){ this.x += x; return this; }\r\n\t\r\n\taddY(y){ this.y += x.y; return this; }\r\n\taddYs(y){ this.y += y; return this; }\r\n\t\r\n\tadd(vec){ this.x += vec.x; this.y += vec.y; return this; }\r\n\tadds(vec){ this.x += vec; this.y += vec; return this; }\r\n\t\r\n\t\r\n\tsubX(x){ this.x -= x.x; return this; }\r\n\tsubXs(x){ this.x -= x; return this; }\r\n\t\r\n\tsubY(y){ this.y -= x.y; return this; }\r\n\tsubYs(y){ this.y -= y; return this; }\r\n\t\r\n\tsub(vec){ this.x -= vec.x; this.y -= vec.y; return this; }\r\n\tsubs(vec){ this.x -= vec; this.y -= vec; return this; }\r\n\t\r\n\t\r\n\tdivX(x){ this.x /= x.x; return this; }\r\n\tdivXs(x){ this.x /= x; return this; }\r\n\t\r\n\tdivY(y){ this.y /= x.y; return this; }\r\n\tdivYs(y){ this.y /= y; return this; }\r\n\t\r\n\tdiv(vec){ this.x /= vec.x; this.y /= vec.y; return this; }\r\n\tdivs(vec){ this.x /= vec; this.y /= vec; return this; }\r\n\t\r\n\t\r\n\tmulX(x){ this.x *= x.x; return this; }\r\n\tmulXs(x){ this.x *= x; return this; }\r\n\t\r\n\tmulY(y){ this.y *= x.y; return this; }\r\n\tmulYs(y){ this.y *= y; return this; }\r\n\t\r\n\tmul(vec){ this.x *= vec.x; this.y *= vec.y; return this; }\r\n\tmuls(vec){ this.x *= vec; this.y *= vec; return this; }\r\n\t\r\n\t\r\n\tinvX(){ this.x *= -1; return this; }\r\n\tinvY(){ this.y *= -1; return this; }\r\n\tinv(){ this.x *= -1; this.y *= -1; return this; }\r\n\t\r\n\tnormalize(){ this.divs(this.length()); return this; }\r\n\t\r\n\tlimit(max, factor){\r\n\t\tif(Math.abs(this.x) > max){ this.x *= factor; }\r\n\t\tif(Math.abs(this.y) > max){ this.y *= factor; }\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\trandomize(vec){\r\n\t\tthis.x = this.random(Math.min(this.x, vec.x), Math.max(this.x, vec.x));\r\n\t\tthis.y = this.random(Math.min(this.y, vec.y), Math.max(this.y, vec.y));\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\trandomizeX(vec1, vec2){\r\n\t\tthis.x = this.random(Math.min(vec1.x, vec2.x), Math.max(vec1.x, vec2.x));\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\trandomizeY(vec1, vec2){\r\n\t\tthis.y = this.random(Math.min(vec1.y, vec2.y), Math.max(vec1.y, vec2.y));\t\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\trandomizeAny(vec1, vec2){\r\n\t\tif(!!Math.round(Math.random()))\r\n\t\t\treturn this.randomizeX(vec1, vec2);\r\n\t\telse\r\n\t\t\treturn this.randomizeY(vec1, vec2);\r\n\t}\r\n\t\r\n\tround(){\r\n\t\tthis.x = Math.round(this.x);\r\n\t\tthis.y = Math.round(this.y);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tfloor(){\r\n\t\tthis.x = Math.floor(this.x);\r\n\t\tthis.y = Math.floor(this.y);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tceil(){\r\n\t\tthis.x = Math.ceil(this.x);\r\n\t\tthis.y = Math.ceil(this.y);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tlog2(){\r\n\t\tthis.x = Math.log2(this.x);\r\n\t\tthis.y = Math.log2(this.y);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tlog(){\r\n\t\tthis.x = Math.log(this.x);\r\n\t\tthis.y = Math.log(this.y);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\texp(){\r\n\t\tthis.x = Math.exp(this.x);\r\n\t\tthis.y = Math.exp(this.y);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\ttoFixed(precision = 8){\r\n\t\tthis.x = this.x.toFixed(precision);\r\n\t\tthis.y = this.y.toFixed(precision);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tmixX(vec, amount = 0.5){\r\n\t\tthis.x = (1 - amount) * this.x + amount * vec.x;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tmixY(vec, amount = 0.5){\r\n\t\tthis.y = (1 - amount) * this.y + amount * vec.y;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tmix(vec, amount = 0.5){\r\n\t\tthis.x = (1 - amount) * this.x + amount * vec.x;\r\n\t\tthis.y = (1 - amount) * this.y + amount * vec.y;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tdot(vec){\r\n\t\treturn this.x * vec.x + this.y * vec.y;\r\n\t}\r\n\t\r\n\tcross(vec){\r\n\t\treturn this.x * vec.y - this.y * vec.x;\r\n\t}\r\n\t\r\n\tprojectOnto(vec){\r\n\t\tlet coeff = this.dot(vec) / vec.dot(vec);\r\n\t\t\r\n\t\tthis.x = vec.x * coeff;\r\n\t\tthis.y = vec.y * coeff;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\thorizontalAngle(){\r\n\t\treturn Math.atan2(this.x, this.y);\r\n\t}\r\n\t\r\n\tverticalAngle(){\r\n\t\treturn Math.atan2(this.y, this.x);\r\n\t}\r\n\t\r\n\thorizontalAngleDeg(){\r\n\t\treturn this.rad2deg(Math.atan2(this.x, this.y));\r\n\t}\r\n\t\r\n\tverticalAngleDeg(){\r\n\t\treturn this.rad2deg(Math.atan2(this.y, this.x));\r\n\t}\r\n\t\r\n\trotate(ang){\r\n\t\tlet cs = Math.cos(ang);\r\n\t\tlet sn = Math.sin(ang);\r\n\t\t\r\n\t\tlet x = this.x * cs - this.y * sn;\r\n\t\tlet y = this.x * sn + this.y * cs;\r\n\t\t\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\trotateDeg(ang){\r\n\t\treturn this.rotate(this.deg2rad(ang));\r\n\t}\r\n\t\r\n\trotateTo(ang){\r\n\t\treturn this.rotate(ang - this.horizontalAngle());\r\n\t}\r\n\t\r\n\trotateToDeg(ang){\r\n\t\treturn this.rotate(this.deg2rad(ang) - this.horizontalAngle());\r\n\t}\r\n\t\r\n\trotateBy(ang){\r\n\t\treturn this.rotate(ang + this.ang());\r\n\t}\r\n\t\r\n\trotateByDeg(ang){\r\n\t\treturn this.rotate(this.deg2rad(ang) + this.ang());\r\n\t}\r\n\t\r\n\tdistX(vec){ return this.x - vec.x; }\r\n\tdistXabs(vec){ return Math.abs(this.x - vec.x); }\r\n\t\r\n\tdistY(vec){ return this.y - vec.y; }\r\n\tdistYabs(vec){ return Math.abs(this.y - vec.y); }\r\n\t\r\n\tdist(vec){ return Math.sqrt(this.distX(vec) ** 2 + this.distY(vec) ** 2); }\r\n\t\r\n\tlength(){ return Math.sqrt(this.x ** 2 + this.y ** 2); }\r\n\t\r\n\tisZero(){ return this.x === 0 && this.y === 0; }\r\n\tisEqual(vec){ return this.x === vec.x && this.y === vec.y; }\r\n\t\r\n\ttoString(){ return '[x:' + this.x + ', y:' + this.y + ']'; }\r\n\ttoArray(){ return [this.x, this.y]; }\r\n\ttoObject(){ return { x: this.x, y: this.y }; }\r\n\r\n\trandom(min, max){ return Math.random() * (max - min) + min; }\r\n\r\n\trad2deg(rad){ return rad * _degrees; }\r\n\tdeg2rad(deg){ return deg / _degrees; }\r\n\t\r\n\tclone(){ return new Vector_(this.x, this.y); }\r\n\t\r\n\t*[Symbol.iterator](){\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\t}\r\n}\r\n\r\nconst _degrees = 180 / Math.PI;\r\n\r\nlet Vector_ = _Vector;\r\n\r\n// export function Vector(...args){\r\n\t// return new _Vector(...args);\r\n// }\n\n//# sourceURL=webpack:///./src/Algos/_helpers/Vector_.js?");

/***/ }),

/***/ "./src/Algos/_helpers/Victor.js":
/*!**************************************!*\
  !*** ./src/Algos/_helpers/Victor.js ***!
  \**************************************/
/***/ ((module) => {

eval("/*!\r\nMIT License\r\n\r\nCopyright (c) 2011 Max Kueng, George Crabtree\r\n \r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n \r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n \r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n!function(e){if(true)module.exports=e();else { var f; }}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=undefined;if(!u&&a)return require(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=undefined;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\r\nexports = module.exports = Victor;\r\n\r\n/**\r\n * # Victor - A JavaScript 2D vector class with methods for common vector operations\r\n */\r\n\r\n/**\r\n * Constructor. Will also work without the `new` keyword\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 50);\r\n *     var vec2 = Victor(42, 1337);\r\n *\r\n * @param {Number} x Value of the x axis\r\n * @param {Number} y Value of the y axis\r\n * @return {Victor}\r\n * @api public\r\n */\r\nfunction Victor (x, y) {\r\n\tif (!(this instanceof Victor)) {\r\n\t\treturn new Victor(x, y);\r\n\t}\r\n\t\r\n\tif (x instanceof Object){\r\n\t\tif (x.y !== undefined) y = x.y;\r\n\t\tif (x.x !== undefined) x = x.x;\r\n\t}\r\n\r\n\t/**\r\n\t * The X axis\r\n\t *\r\n\t * ### Examples:\r\n\t *     var vec = new Victor.fromArray(42, 21);\r\n\t *\r\n\t *     vec.x;\r\n\t *     // => 42\r\n\t *\r\n\t * @api public\r\n\t */\r\n\tthis.x = x || 0;\r\n\r\n\t/**\r\n\t * The Y axis\r\n\t *\r\n\t * ### Examples:\r\n\t *     var vec = new Victor.fromArray(42, 21);\r\n\t *\r\n\t *     vec.y;\r\n\t *     // => 21\r\n\t *\r\n\t * @api public\r\n\t */\r\n\tthis.y = y || 0;\r\n};\r\n\r\n/**\r\n * # Static\r\n */\r\n\r\n/**\r\n * Creates a new instance from an array\r\n *\r\n * ### Examples:\r\n *     var vec = Victor.fromArray([42, 21]);\r\n *\r\n *     vec.toString();\r\n *     // => x:42, y:21\r\n *\r\n * @name Victor.fromArray\r\n * @param {Array} array Array with the x and y values at index 0 and 1 respectively\r\n * @return {Victor} The new instance\r\n * @api public\r\n */\r\nVictor.fromArray = function (arr) {\r\n\treturn new Victor(arr[0] || 0, arr[1] || 0);\r\n};\r\n\r\n/**\r\n * Creates a new instance from an object\r\n *\r\n * ### Examples:\r\n *     var vec = Victor.fromObject({ x: 42, y: 21 });\r\n *\r\n *     vec.toString();\r\n *     // => x:42, y:21\r\n *\r\n * @name Victor.fromObject\r\n * @param {Object} obj Object with the values for x and y\r\n * @return {Victor} The new instance\r\n * @api public\r\n */\r\nVictor.fromObject = function (obj) {\r\n\treturn new Victor(obj.x || 0, obj.y || 0);\r\n};\r\n\r\n/**\r\n * # Manipulation\r\n *\r\n * These functions are chainable.\r\n */\r\n\r\n/**\r\n * Adds another vector's X axis to this one\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(10, 10);\r\n *     var vec2 = new Victor(20, 30);\r\n *\r\n *     vec1.addX(vec2);\r\n *     vec1.toString();\r\n *     // => x:30, y:10\r\n *\r\n * @param {Victor} vector The other vector you want to add to this one\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.addX = function (vec) {\r\n\tthis.x += vec.x;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Adds another vector's Y axis to this one\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(10, 10);\r\n *     var vec2 = new Victor(20, 30);\r\n *\r\n *     vec1.addY(vec2);\r\n *     vec1.toString();\r\n *     // => x:10, y:40\r\n *\r\n * @param {Victor} vector The other vector you want to add to this one\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.addY = function (vec) {\r\n\tthis.y += vec.y;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Adds another vector to this one\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(10, 10);\r\n *     var vec2 = new Victor(20, 30);\r\n *\r\n *     vec1.add(vec2);\r\n *     vec1.toString();\r\n *     // => x:30, y:40\r\n *\r\n * @param {Victor} vector The other vector you want to add to this one\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.add = function (vec) {\r\n\tthis.x += vec.x;\r\n\tthis.y += vec.y;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Adds the given scalar to both vector axis\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(1, 2);\r\n *\r\n *     vec.addScalar(2);\r\n *     vec.toString();\r\n *     // => x: 3, y: 4\r\n *\r\n * @param {Number} scalar The scalar to add\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.addScalar = function (scalar) {\r\n\tthis.x += scalar;\r\n\tthis.y += scalar;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Adds the given scalar to the X axis\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(1, 2);\r\n *\r\n *     vec.addScalarX(2);\r\n *     vec.toString();\r\n *     // => x: 3, y: 2\r\n *\r\n * @param {Number} scalar The scalar to add\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.addScalarX = function (scalar) {\r\n\tthis.x += scalar;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Adds the given scalar to the Y axis\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(1, 2);\r\n *\r\n *     vec.addScalarY(2);\r\n *     vec.toString();\r\n *     // => x: 1, y: 4\r\n *\r\n * @param {Number} scalar The scalar to add\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.addScalarY = function (scalar) {\r\n\tthis.y += scalar;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Subtracts the X axis of another vector from this one\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 50);\r\n *     var vec2 = new Victor(20, 30);\r\n *\r\n *     vec1.subtractX(vec2);\r\n *     vec1.toString();\r\n *     // => x:80, y:50\r\n *\r\n * @param {Victor} vector The other vector you want subtract from this one\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.subtractX = function (vec) {\r\n\tthis.x -= vec.x;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Subtracts the Y axis of another vector from this one\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 50);\r\n *     var vec2 = new Victor(20, 30);\r\n *\r\n *     vec1.subtractY(vec2);\r\n *     vec1.toString();\r\n *     // => x:100, y:20\r\n *\r\n * @param {Victor} vector The other vector you want subtract from this one\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.subtractY = function (vec) {\r\n\tthis.y -= vec.y;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Subtracts another vector from this one\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 50);\r\n *     var vec2 = new Victor(20, 30);\r\n *\r\n *     vec1.subtract(vec2);\r\n *     vec1.toString();\r\n *     // => x:80, y:20\r\n *\r\n * @param {Victor} vector The other vector you want subtract from this one\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.subtract = function (vec) {\r\n\tthis.x -= vec.x;\r\n\tthis.y -= vec.y;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Subtracts the given scalar from both axis\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 200);\r\n *\r\n *     vec.subtractScalar(20);\r\n *     vec.toString();\r\n *     // => x: 80, y: 180\r\n *\r\n * @param {Number} scalar The scalar to subtract\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.subtractScalar = function (scalar) {\r\n\tthis.x -= scalar;\r\n\tthis.y -= scalar;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Subtracts the given scalar from the X axis\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 200);\r\n *\r\n *     vec.subtractScalarX(20);\r\n *     vec.toString();\r\n *     // => x: 80, y: 200\r\n *\r\n * @param {Number} scalar The scalar to subtract\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.subtractScalarX = function (scalar) {\r\n\tthis.x -= scalar;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Subtracts the given scalar from the Y axis\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 200);\r\n *\r\n *     vec.subtractScalarY(20);\r\n *     vec.toString();\r\n *     // => x: 100, y: 180\r\n *\r\n * @param {Number} scalar The scalar to subtract\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.subtractScalarY = function (scalar) {\r\n\tthis.y -= scalar;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Divides the X axis by the x component of given vector\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *     var vec2 = new Victor(2, 0);\r\n *\r\n *     vec.divideX(vec2);\r\n *     vec.toString();\r\n *     // => x:50, y:50\r\n *\r\n * @param {Victor} vector The other vector you want divide by\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.divideX = function (vector) {\r\n\tthis.x /= vector.x;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Divides the Y axis by the y component of given vector\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *     var vec2 = new Victor(0, 2);\r\n *\r\n *     vec.divideY(vec2);\r\n *     vec.toString();\r\n *     // => x:100, y:25\r\n *\r\n * @param {Victor} vector The other vector you want divide by\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.divideY = function (vector) {\r\n\tthis.y /= vector.y;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Divides both vector axis by a axis values of given vector\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *     var vec2 = new Victor(2, 2);\r\n *\r\n *     vec.divide(vec2);\r\n *     vec.toString();\r\n *     // => x:50, y:25\r\n *\r\n * @param {Victor} vector The vector to divide by\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.divide = function (vector) {\r\n\tthis.x /= vector.x;\r\n\tthis.y /= vector.y;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Divides both vector axis by the given scalar value\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.divideScalar(2);\r\n *     vec.toString();\r\n *     // => x:50, y:25\r\n *\r\n * @param {Number} The scalar to divide by\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.divideScalar = function (scalar) {\r\n\tif (scalar !== 0) {\r\n\t\tthis.x /= scalar;\r\n\t\tthis.y /= scalar;\r\n\t} else {\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t}\r\n\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Divides the X axis by the given scalar value\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.divideScalarX(2);\r\n *     vec.toString();\r\n *     // => x:50, y:50\r\n *\r\n * @param {Number} The scalar to divide by\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.divideScalarX = function (scalar) {\r\n\tif (scalar !== 0) {\r\n\t\tthis.x /= scalar;\r\n\t} else {\r\n\t\tthis.x = 0;\r\n\t}\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Divides the Y axis by the given scalar value\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.divideScalarY(2);\r\n *     vec.toString();\r\n *     // => x:100, y:25\r\n *\r\n * @param {Number} The scalar to divide by\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.divideScalarY = function (scalar) {\r\n\tif (scalar !== 0) {\r\n\t\tthis.y /= scalar;\r\n\t} else {\r\n\t\tthis.y = 0;\r\n\t}\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Inverts the X axis\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.invertX();\r\n *     vec.toString();\r\n *     // => x:-100, y:50\r\n *\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.invertX = function () {\r\n\tthis.x *= -1;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Inverts the Y axis\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.invertY();\r\n *     vec.toString();\r\n *     // => x:100, y:-50\r\n *\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.invertY = function () {\r\n\tthis.y *= -1;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Inverts both axis\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.invert();\r\n *     vec.toString();\r\n *     // => x:-100, y:-50\r\n *\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.invert = function () {\r\n\tthis.invertX();\r\n\tthis.invertY();\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Multiplies the X axis by X component of given vector\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *     var vec2 = new Victor(2, 0);\r\n *\r\n *     vec.multiplyX(vec2);\r\n *     vec.toString();\r\n *     // => x:200, y:50\r\n *\r\n * @param {Victor} vector The vector to multiply the axis with\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.multiplyX = function (vector) {\r\n\tthis.x *= vector.x;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Multiplies the Y axis by Y component of given vector\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *     var vec2 = new Victor(0, 2);\r\n *\r\n *     vec.multiplyX(vec2);\r\n *     vec.toString();\r\n *     // => x:100, y:100\r\n *\r\n * @param {Victor} vector The vector to multiply the axis with\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.multiplyY = function (vector) {\r\n\tthis.y *= vector.y;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Multiplies both vector axis by values from a given vector\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *     var vec2 = new Victor(2, 2);\r\n *\r\n *     vec.multiply(vec2);\r\n *     vec.toString();\r\n *     // => x:200, y:100\r\n *\r\n * @param {Victor} vector The vector to multiply by\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.multiply = function (vector) {\r\n\tthis.x *= vector.x;\r\n\tthis.y *= vector.y;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Multiplies both vector axis by the given scalar value\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.multiplyScalar(2);\r\n *     vec.toString();\r\n *     // => x:200, y:100\r\n *\r\n * @param {Number} The scalar to multiply by\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.multiplyScalar = function (scalar) {\r\n\tthis.x *= scalar;\r\n\tthis.y *= scalar;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Multiplies the X axis by the given scalar\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.multiplyScalarX(2);\r\n *     vec.toString();\r\n *     // => x:200, y:50\r\n *\r\n * @param {Number} The scalar to multiply the axis with\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.multiplyScalarX = function (scalar) {\r\n\tthis.x *= scalar;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Multiplies the Y axis by the given scalar\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.multiplyScalarY(2);\r\n *     vec.toString();\r\n *     // => x:100, y:100\r\n *\r\n * @param {Number} The scalar to multiply the axis with\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.multiplyScalarY = function (scalar) {\r\n\tthis.y *= scalar;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Normalize\r\n *\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.normalize = function () {\r\n\tvar length = this.length();\r\n\r\n\tif (length === 0) {\r\n\t\tthis.x = 1;\r\n\t\tthis.y = 0;\r\n\t} else {\r\n\t\tthis.divide(Victor(length, length));\r\n\t}\r\n\treturn this;\r\n};\r\n\r\nVictor.prototype.norm = Victor.prototype.normalize;\r\n\r\n/**\r\n * If the absolute vector axis is greater than `max`, multiplies the axis by `factor`\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.limit(80, 0.9);\r\n *     vec.toString();\r\n *     // => x:90, y:50\r\n *\r\n * @param {Number} max The maximum value for both x and y axis\r\n * @param {Number} factor Factor by which the axis are to be multiplied with\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.limit = function (max, factor) {\r\n\tif (Math.abs(this.x) > max){ this.x *= factor; }\r\n\tif (Math.abs(this.y) > max){ this.y *= factor; }\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Randomizes both vector axis with a value between 2 vectors\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.randomize(new Victor(50, 60), new Victor(70, 80`));\r\n *     vec.toString();\r\n *     // => x:67, y:73\r\n *\r\n * @param {Victor} topLeft first vector\r\n * @param {Victor} bottomRight second vector\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.randomize = function (topLeft, bottomRight) {\r\n\tthis.randomizeX(topLeft, bottomRight);\r\n\tthis.randomizeY(topLeft, bottomRight);\r\n\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Randomizes the y axis with a value between 2 vectors\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.randomizeX(new Victor(50, 60), new Victor(70, 80`));\r\n *     vec.toString();\r\n *     // => x:55, y:50\r\n *\r\n * @param {Victor} topLeft first vector\r\n * @param {Victor} bottomRight second vector\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.randomizeX = function (topLeft, bottomRight) {\r\n\tvar min = Math.min(topLeft.x, bottomRight.x);\r\n\tvar max = Math.max(topLeft.x, bottomRight.x);\r\n\tthis.x = random(min, max);\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Randomizes the y axis with a value between 2 vectors\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.randomizeY(new Victor(50, 60), new Victor(70, 80`));\r\n *     vec.toString();\r\n *     // => x:100, y:66\r\n *\r\n * @param {Victor} topLeft first vector\r\n * @param {Victor} bottomRight second vector\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.randomizeY = function (topLeft, bottomRight) {\r\n\tvar min = Math.min(topLeft.y, bottomRight.y);\r\n\tvar max = Math.max(topLeft.y, bottomRight.y);\r\n\tthis.y = random(min, max);\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Randomly randomizes either axis between 2 vectors\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.randomizeAny(new Victor(50, 60), new Victor(70, 80));\r\n *     vec.toString();\r\n *     // => x:100, y:77\r\n *\r\n * @param {Victor} topLeft first vector\r\n * @param {Victor} bottomRight second vector\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.randomizeAny = function (topLeft, bottomRight) {\r\n\tif (!! Math.round(Math.random())) {\r\n\t\tthis.randomizeX(topLeft, bottomRight);\r\n\t} else {\r\n\t\tthis.randomizeY(topLeft, bottomRight);\r\n\t}\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Rounds both axis to an integer value\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100.2, 50.9);\r\n *\r\n *     vec.unfloat();\r\n *     vec.toString();\r\n *     // => x:100, y:51\r\n *\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.unfloat = function () {\r\n\tthis.x = Math.round(this.x);\r\n\tthis.y = Math.round(this.y);\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Rounds both axis to a certain precision\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100.2, 50.9);\r\n *\r\n *     vec.unfloat();\r\n *     vec.toString();\r\n *     // => x:100, y:51\r\n *\r\n * @param {Number} Precision (default: 8)\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.toFixed = function (precision) {\r\n\tif (typeof precision === 'undefined') { precision = 8; }\r\n\tthis.x = this.x.toFixed(precision);\r\n\tthis.y = this.y.toFixed(precision);\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Performs a linear blend / interpolation of the X axis towards another vector\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 100);\r\n *     var vec2 = new Victor(200, 200);\r\n *\r\n *     vec1.mixX(vec2, 0.5);\r\n *     vec.toString();\r\n *     // => x:150, y:100\r\n *\r\n * @param {Victor} vector The other vector\r\n * @param {Number} amount The blend amount (optional, default: 0.5)\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.mixX = function (vec, amount) {\r\n\tif (typeof amount === 'undefined') {\r\n\t\tamount = 0.5;\r\n\t}\r\n\r\n\tthis.x = (1 - amount) * this.x + amount * vec.x;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Performs a linear blend / interpolation of the Y axis towards another vector\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 100);\r\n *     var vec2 = new Victor(200, 200);\r\n *\r\n *     vec1.mixY(vec2, 0.5);\r\n *     vec.toString();\r\n *     // => x:100, y:150\r\n *\r\n * @param {Victor} vector The other vector\r\n * @param {Number} amount The blend amount (optional, default: 0.5)\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.mixY = function (vec, amount) {\r\n\tif (typeof amount === 'undefined') {\r\n\t\tamount = 0.5;\r\n\t}\r\n\r\n\tthis.y = (1 - amount) * this.y + amount * vec.y;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Performs a linear blend / interpolation towards another vector\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 100);\r\n *     var vec2 = new Victor(200, 200);\r\n *\r\n *     vec1.mix(vec2, 0.5);\r\n *     vec.toString();\r\n *     // => x:150, y:150\r\n *\r\n * @param {Victor} vector The other vector\r\n * @param {Number} amount The blend amount (optional, default: 0.5)\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.mix = function (vec, amount) {\r\n\tthis.mixX(vec, amount);\r\n\tthis.mixY(vec, amount);\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * # Products\r\n */\r\n\r\n/**\r\n * Creates a clone of this vector\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(10, 10);\r\n *     var vec2 = vec1.clone();\r\n *\r\n *     vec2.toString();\r\n *     // => x:10, y:10\r\n *\r\n * @return {Victor} A clone of the vector\r\n * @api public\r\n */\r\nVictor.prototype.clone = function () {\r\n\treturn new Victor(this.x, this.y);\r\n};\r\n\r\n/**\r\n * Copies another vector's X component in to its own\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(10, 10);\r\n *     var vec2 = new Victor(20, 20);\r\n *     var vec2 = vec1.copyX(vec1);\r\n *\r\n *     vec2.toString();\r\n *     // => x:20, y:10\r\n *\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.copyX = function (vec) {\r\n\tthis.x = vec.x;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Copies another vector's Y component in to its own\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(10, 10);\r\n *     var vec2 = new Victor(20, 20);\r\n *     var vec2 = vec1.copyY(vec1);\r\n *\r\n *     vec2.toString();\r\n *     // => x:10, y:20\r\n *\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.copyY = function (vec) {\r\n\tthis.y = vec.y;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Copies another vector's X and Y components in to its own\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(10, 10);\r\n *     var vec2 = new Victor(20, 20);\r\n *     var vec2 = vec1.copy(vec1);\r\n *\r\n *     vec2.toString();\r\n *     // => x:20, y:20\r\n *\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.copy = function (vec) {\r\n\tthis.copyX(vec);\r\n\tthis.copyY(vec);\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Sets the vector to zero (0,0)\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(10, 10);\r\n *\t\t var1.zero();\r\n *     vec1.toString();\r\n *     // => x:0, y:0\r\n *\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.zero = function () {\r\n\tthis.x = this.y = 0;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Calculates the dot product of this vector and another\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 50);\r\n *     var vec2 = new Victor(200, 60);\r\n *\r\n *     vec1.dot(vec2);\r\n *     // => 23000\r\n *\r\n * @param {Victor} vector The second vector\r\n * @return {Number} Dot product\r\n * @api public\r\n */\r\nVictor.prototype.dot = function (vec2) {\r\n\treturn this.x * vec2.x + this.y * vec2.y;\r\n};\r\n\r\nVictor.prototype.cross = function (vec2) {\r\n\treturn (this.x * vec2.y ) - (this.y * vec2.x );\r\n};\r\n\r\n/**\r\n * Projects a vector onto another vector, setting itself to the result.\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 0);\r\n *     var vec2 = new Victor(100, 100);\r\n *\r\n *     vec.projectOnto(vec2);\r\n *     vec.toString();\r\n *     // => x:50, y:50\r\n *\r\n * @param {Victor} vector The other vector you want to project this vector onto\r\n * @return {Victor} `this` for chaining capabilities\r\n * @api public\r\n */\r\nVictor.prototype.projectOnto = function (vec2) {\r\n    var coeff = ( (this.x * vec2.x)+(this.y * vec2.y) ) / ((vec2.x*vec2.x)+(vec2.y*vec2.y));\r\n\t\r\n    this.x = coeff * vec2.x;\r\n    this.y = coeff * vec2.y;\r\n    return this;\r\n};\r\n\r\n\r\nVictor.prototype.horizontalAngle = function () {\r\n\treturn Math.atan2(this.y, this.x);\r\n};\r\n\r\nVictor.prototype.horizontalAngleDeg = function () {\r\n\treturn radian2degrees(this.horizontalAngle());\r\n};\r\n\r\nVictor.prototype.verticalAngle = function () {\r\n\treturn Math.atan2(this.x, this.y);\r\n};\r\n\r\nVictor.prototype.verticalAngleDeg = function () {\r\n\treturn radian2degrees(this.verticalAngle());\r\n};\r\n\r\nVictor.prototype.angle = Victor.prototype.horizontalAngle;\r\nVictor.prototype.angleDeg = Victor.prototype.horizontalAngleDeg;\r\nVictor.prototype.direction = Victor.prototype.horizontalAngle;\r\n\r\nVictor.prototype.rotate = function (angle) {\r\n\tvar nx = (this.x * Math.cos(angle)) - (this.y * Math.sin(angle));\r\n\tvar ny = (this.x * Math.sin(angle)) + (this.y * Math.cos(angle));\r\n\r\n\tthis.x = nx;\r\n\tthis.y = ny;\r\n\r\n\treturn this;\r\n};\r\n\r\nVictor.prototype.rotateDeg = function (angle) {\r\n\tangle = degrees2radian(angle);\r\n\treturn this.rotate(angle);\r\n};\r\n\r\nVictor.prototype.rotateTo = function(rotation) {\r\n\treturn this.rotate(rotation-this.angle());\r\n};\r\n\r\nVictor.prototype.rotateToDeg = function(rotation) {\r\n\trotation = degrees2radian(rotation);\r\n\treturn this.rotateTo(rotation);\r\n};\r\n\r\nVictor.prototype.rotateBy = function (rotation) {\r\n\tvar angle = this.angle() + rotation;\r\n\r\n\treturn this.rotate(angle);\r\n};\r\n\r\nVictor.prototype.rotateByDeg = function (rotation) {\r\n\trotation = degrees2radian(rotation);\r\n\treturn this.rotateBy(rotation);\r\n};\r\n\r\n/**\r\n * Calculates the distance of the X axis between this vector and another\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 50);\r\n *     var vec2 = new Victor(200, 60);\r\n *\r\n *     vec1.distanceX(vec2);\r\n *     // => -100\r\n *\r\n * @param {Victor} vector The second vector\r\n * @return {Number} Distance\r\n * @api public\r\n */\r\nVictor.prototype.distanceX = function (vec) {\r\n\treturn this.x - vec.x;\r\n};\r\n\r\n/**\r\n * Same as `distanceX()` but always returns an absolute number\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 50);\r\n *     var vec2 = new Victor(200, 60);\r\n *\r\n *     vec1.absDistanceX(vec2);\r\n *     // => 100\r\n *\r\n * @param {Victor} vector The second vector\r\n * @return {Number} Absolute distance\r\n * @api public\r\n */\r\nVictor.prototype.absDistanceX = function (vec) {\r\n\treturn Math.abs(this.distanceX(vec));\r\n};\r\n\r\n/**\r\n * Calculates the distance of the Y axis between this vector and another\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 50);\r\n *     var vec2 = new Victor(200, 60);\r\n *\r\n *     vec1.distanceY(vec2);\r\n *     // => -10\r\n *\r\n * @param {Victor} vector The second vector\r\n * @return {Number} Distance\r\n * @api public\r\n */\r\nVictor.prototype.distanceY = function (vec) {\r\n\treturn this.y - vec.y;\r\n};\r\n\r\n/**\r\n * Same as `distanceY()` but always returns an absolute number\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 50);\r\n *     var vec2 = new Victor(200, 60);\r\n *\r\n *     vec1.distanceY(vec2);\r\n *     // => 10\r\n *\r\n * @param {Victor} vector The second vector\r\n * @return {Number} Absolute distance\r\n * @api public\r\n */\r\nVictor.prototype.absDistanceY = function (vec) {\r\n\treturn Math.abs(this.distanceY(vec));\r\n};\r\n\r\n/**\r\n * Calculates the euclidean distance between this vector and another\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 50);\r\n *     var vec2 = new Victor(200, 60);\r\n *\r\n *     vec1.distance(vec2);\r\n *     // => 100.4987562112089\r\n *\r\n * @param {Victor} vector The second vector\r\n * @return {Number} Distance\r\n * @api public\r\n */\r\nVictor.prototype.distance = function (vec) {\r\n\treturn Math.sqrt(this.distanceSq(vec));\r\n};\r\n\r\n/**\r\n * Calculates the squared euclidean distance between this vector and another\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 50);\r\n *     var vec2 = new Victor(200, 60);\r\n *\r\n *     vec1.distanceSq(vec2);\r\n *     // => 10100\r\n *\r\n * @param {Victor} vector The second vector\r\n * @return {Number} Distance\r\n * @api public\r\n */\r\nVictor.prototype.distanceSq = function (vec) {\r\n\tvar dx = this.distanceX(vec),\r\n\t\tdy = this.distanceY(vec);\r\n\r\n\treturn dx * dx + dy * dy;\r\n};\r\n\r\n/**\r\n * Calculates the length or magnitude of the vector\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.length();\r\n *     // => 111.80339887498948\r\n *\r\n * @return {Number} Length / Magnitude\r\n * @api public\r\n */\r\nVictor.prototype.length = function () {\r\n\treturn Math.sqrt(this.lengthSq());\r\n};\r\n\r\n/**\r\n * Squared length / magnitude\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *\r\n *     vec.lengthSq();\r\n *     // => 12500\r\n *\r\n * @return {Number} Length / Magnitude\r\n * @api public\r\n */\r\nVictor.prototype.lengthSq = function () {\r\n\treturn this.x * this.x + this.y * this.y;\r\n};\r\n\r\nVictor.prototype.magnitude = Victor.prototype.length;\r\n\r\n/**\r\n * Returns a true if vector is (0, 0)\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(100, 50);\r\n *     vec.zero();\r\n *\r\n *     // => true\r\n *\r\n * @return {Boolean}\r\n * @api public\r\n */\r\nVictor.prototype.isZero = function() {\r\n\treturn this.x === 0 && this.y === 0;\r\n};\r\n\r\n/**\r\n * Returns a true if this vector is the same as another\r\n *\r\n * ### Examples:\r\n *     var vec1 = new Victor(100, 50);\r\n *     var vec2 = new Victor(100, 50);\r\n *     vec1.isEqualTo(vec2);\r\n *\r\n *     // => true\r\n *\r\n * @return {Boolean}\r\n * @api public\r\n */\r\nVictor.prototype.isEqualTo = function(vec2) {\r\n\treturn this.x === vec2.x && this.y === vec2.y;\r\n};\r\n\r\n/**\r\n * # Utility Methods\r\n */\r\n\r\n/**\r\n * Returns an string representation of the vector\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(10, 20);\r\n *\r\n *     vec.toString();\r\n *     // => x:10, y:20\r\n *\r\n * @return {String}\r\n * @api public\r\n */\r\nVictor.prototype.toString = function () {\r\n\treturn 'x:' + this.x + ', y:' + this.y;\r\n};\r\n\r\n/**\r\n * Returns an array representation of the vector\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(10, 20);\r\n *\r\n *     vec.toArray();\r\n *     // => [10, 20]\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\r\nVictor.prototype.toArray = function () {\r\n\treturn [ this.x, this.y ];\r\n};\r\n\r\n/**\r\n * Returns an object representation of the vector\r\n *\r\n * ### Examples:\r\n *     var vec = new Victor(10, 20);\r\n *\r\n *     vec.toObject();\r\n *     // => { x: 10, y: 20 }\r\n *\r\n * @return {Object}\r\n * @api public\r\n */\r\nVictor.prototype.toObject = function () {\r\n\treturn { x: this.x, y: this.y };\r\n};\r\n\r\n/* MODIFIED */\r\nVictor.prototype.floor = function () {\r\n\treturn { x: Math.floor(this.x), y: Math.floor(this.y) };\r\n};\r\n/* END_MODIFIED */\r\n\r\nvar degrees = 180 / Math.PI;\r\n\r\nfunction random (min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction radian2degrees (rad) {\r\n\treturn rad * degrees;\r\n}\r\n\r\nfunction degrees2radian (deg) {\r\n\treturn deg / degrees;\r\n}\r\n\r\n},{}]},{},[1])\r\n(1)\r\n});\n\n//# sourceURL=webpack:///./src/Algos/_helpers/Victor.js?");

/***/ }),

/***/ "./src/Algos/a_star/main.js":
/*!**********************************!*\
  !*** ./src/Algos/a_star/main.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Algo_a_star\": () => (/* binding */ Algo_a_star)\n/* harmony export */ });\n/* harmony import */ var _helpers_Matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_helpers/Matrix */ \"./src/Algos/_helpers/Matrix.js\");\n\r\n\r\nclass Point{\r\n\tconstructor(x, y){\r\n\t\tthis.w = x;\r\n\t\tthis.h = y;\r\n\t}\r\n}\r\n\r\nclass Algo_a_star{\r\n\tconstructor(Matrix, height, width){\r\n\t\tthis.onstart = null;\r\n\t\tthis.onend = null;\r\n\t\t\r\n\t\tthis.walls = Matrix;\r\n\t\tthis.height = Number(height);\r\n\t\tthis.width = Number(width);\r\n\t\tthis.ondraw = null;\r\n\r\n\t\tthis.queue = [];\r\n\t}\r\n\r\n\t\r\n\r\n\tresize(Matrix, height, width){\r\n\t\tthis.walls = Matrix;\r\n\t\tthis.height = Number(height);\r\n\t\tthis.width = Number(width);\r\n\t}\r\n\r\n\tprint_matrix(matrix = this.walls){\r\n\t\tfor (let h = 0; h < this.height; h++){\r\n\t\t\tlet s = ''\r\n\t\t\tfor (let w = 0; w < this.width; w++){\r\n\t\t\t\ts += matrix[w][h] + ' ';\r\n\t\t\t}\r\n\t\t\tconsole.log(s);\r\n\t\t}\r\n\r\n\t\t/*for (let i = 0; i < this.height; i++){\r\n\t\t\tlet s = '';\r\n\t\t\tfor (let j = 0; j < this.width; j++){\r\n\t\t\t\ts += this.walls[j][i] + ' ';\r\n\t\t\t}\r\n\t\t\tconsole.log(s);\r\n\t\t}*/\r\n\t};\r\n\t\r\n\t*update(){\r\n\t\tif(this.onstart instanceof Function)\r\n\t\t\tthis.onstart.call(this)();\r\n\t\t\r\n\t\twhile(true){\r\n\t\t\t/* code... */\r\n\t\t\tlet deltaT = yield;\r\n\t\t\tlet ret = this.test;\r\n\t\t\t\r\n\t\t\tif(this.queue.length == 0)\r\n\t\t\t\tcontinue;\r\n\t\t\t\r\n\t\t\tlet step = this.queue.splice(0, 1)[0];\r\n\t\t\t\r\n\t\t\tswitch (step.func) {\r\n\t\t\t\t/*case 'labirint':\r\n\t\t\t\t\tconsole.log(step);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet generator = this._labirint();\r\n\t\t\t\t\tlet flag = false;\r\n\t\t\t\t\tlet result;\r\n\r\n\t\t\t\t\twhile(!flag){\r\n\t\t\t\t\t\tlet func_vals = generator.next();\r\n\t\t\t\t\t\tresult = func_vals.value;\r\n\t\t\t\t\t\tflag = func_vals.done;\r\n\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;*/\r\n\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.ondraw instanceof Function)\r\n\t\t\t\tthis.ondraw.call(this, deltaT, ret);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onend instanceof Function)\r\n\t\t\tthis.onend.call(this);\r\n\t}\r\n\r\n\r\n\t\r\n\tlabirint() {\r\n\t\t\r\n\t\tfor (let i = 0; i < this.height; i++){\r\n\t\t\tfor (let j = 0; j < this.width; j++){\r\n\t\t\t\tthis.walls[j][i] = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getRandomInt(min, max) {\r\n\t\t\tmin = Math.ceil(min);\r\n\t\t\tmax = Math.floor(max);\r\n\t\t\treturn Math.floor(Math.random() * (max - min)) + min;\r\n\t\t}\r\n\r\n\t\tlet x = getRandomInt(0, this.width/2) * 2 + 1;\r\n\t\tlet y = getRandomInt(0, this.height/2) * 2 + 1;\r\n\t\tthis.walls[x][y] = false;\r\n\t\t\r\n\t\tlet to_check = new Array();\r\n\r\n\t\tif (y-2 >= 0){\r\n\t\t\tto_check.push(new Point(x, y - 2));\r\n\t\t}\r\n\t\tif (y + 2 < this.height){\r\n\t\t\tto_check.push(new Point(x, y + 2));\r\n\t\t}\r\n\t\tif (x-2 >= 0){\r\n\t\t\tto_check.push(new Point(x - 2, y));\r\n\t\t}\r\n\t\tif (x+2 < this.width){\r\n\t\t\tto_check.push(new Point(x + 2, y));\r\n\t\t}\r\n\r\n\t\twhile (to_check.length > 0){\r\n\t\t\tlet index = getRandomInt(0, to_check.length)\r\n\t\t\tlet cell = to_check[index];\r\n\r\n\t\t\tlet x = cell.w;\r\n\t\t\tlet y = cell.h;\r\n\r\n\t\t\tthis.walls[x][y] = false;\r\n\t\t\tto_check.splice(index, 1);\r\n\r\n\t\t\tlet Direction = ['North', 'South', 'West', 'East'];\r\n\r\n\t\t\twhile (Direction.length > 0){\r\n\t\t\t\tlet dir_index = getRandomInt(0, Direction.length);\r\n\t\t\t\tswitch (Direction[dir_index]){\r\n\t\t\t\t\tcase 'North':\r\n\t\t\t\t\t\tif (y - 2 >= 0 && !this.walls[x][y-2]){\r\n\t\t\t\t\t\t\tthis.walls[x][y-1] = false;\r\n\t\t\t\t\t\t\tDirection.splice(0, Direction.length);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'South':\r\n\t\t\t\t\t\tif (y + 2 < this.height && !this.walls[x][y + 2]){\r\n\t\t\t\t\t\t\tthis.walls[x][y + 1] = false;\r\n\t\t\t\t\t\t\tDirection.splice(0, Direction.length);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'West':\r\n\t\t\t\t\t\tif (x + 2 < this.width && !this.walls[x+2][y]){\r\n\t\t\t\t\t\t\tthis.walls[x + 1][y] = false;\r\n\t\t\t\t\t\t\tDirection.splice(0, Direction.length);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'East':\r\n\t\t\t\t\t\tif (x - 2 >= 0 && !this.walls[x-2][y]){\r\n\t\t\t\t\t\t\tthis.walls[x - 1][y] = false;\r\n\t\t\t\t\t\t\tDirection.splice(0, Direction.length);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tDirection.splice(dir_index, 1);\r\n\t\t\t};\r\n\r\n\t\t\tif (y - 2 >= 0 && this.walls[x][y-2]){\r\n\t\t\t\tto_check.push(new Point(x, y - 2));\r\n\t\t\t}\r\n\t\t\tif (y + 2 < this.height && this.walls[x][y+2]){\r\n\t\t\t\tto_check.push(new Point(x, y + 2));\r\n\t\t\t}\r\n\t\t\tif (x - 2 >= 0 && this.walls[x-2][y]){\r\n\t\t\t\tto_check.push(new Point(x - 2, y));\r\n\t\t\t}\r\n\t\t\tif (x + 2 < this.width && this.walls[x+2][y]){\r\n\t\t\t\tto_check.push(new Point(x + 2, y));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < 4; i++){\r\n\t\t\tlet dead_ends = [];\r\n\r\n\t\t\tfor (let h = 0; h < this.height; h++){\r\n\t\t\t\tfor (let w = 0; w < this.width; w++){\r\n\t\t\t\t\tif (!this.walls[w][h]){\r\n\t\t\t\t\t\tlet neighbors = 0;\r\n\t\t\t\t\t\tif (h - 1 >= 0 && !this.walls[w][h-1]){\r\n\t\t\t\t\t\t\tneighbors++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (h + 1 < this.height && !this.walls[w][h+1]){\r\n\t\t\t\t\t\t\tneighbors++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (w - 1 >= 0 && !this.walls[w-1][h]){\r\n\t\t\t\t\t\t\tneighbors++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (w + 1 < this.width && !this.walls[w+1][h]){\r\n\t\t\t\t\t\t\tneighbors++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (neighbors <= 1){\r\n\t\t\t\t\t\t\tdead_ends.push(new Point(w, h));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let cell of dead_ends){\r\n\t\t\t\tthis.walls[cell.w][cell.h] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (this.width % 2 === 0){\r\n\t\t\tfor (let cell = 0; cell < this.width; cell++){\r\n\t\t\t\tthis.walls[this.width - 1][cell] = true;\r\n\t\t\t\tthis.walls[cell][this.height - 1] = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let h = 0; h < this.height; h++){\r\n\t\t\tfor (let w = 0; w < this.width; w++){\r\n\t\t\t\tif (this.walls[w][h]){\r\n\t\t\t\t\tthis.walls[w][h] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.walls[w][h]){\r\n\t\t\t\t\tthis.walls[w][h] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.print_matrix(this.walls);\r\n\r\n\t\treturn this.walls;\r\n\r\n\t\tthis.queue.push({func: 'labirint', var: arguments});\r\n\t\t\r\n\t}\r\n\r\n\talgos_a_star(start_x, start_y, end_x, end_y){\r\n\t\tlet height = this.height;\r\n\t\tlet width = this.width;\r\n\t\tlet start = new Point(start_x, start_y);\r\n\t\tlet end = new Point(end_x, end_y);\r\n\r\n\t\tclass Node{\r\n\t\t\tconstructor(parent = undefined, position = undefined){\r\n\t\t\t\tthis.parent = parent;\r\n\t\t\t\tthis.position = position;\r\n\r\n\t\t\t\tthis.g = 0;  //стоимость пути от начальной вершины до любой другой\r\n\t\t\t\tthis.h = 0;  //эвристическое приближение стоимости пути от узла n до конечного узла\r\n\t\t\t\tthis.f = 0;  //минимальная стоимость перехода в соседний узел\r\n\t\t\t}\r\n\r\n\t\t\t/*_eq_(other){\r\n\t\t\t\treturn this.position === \r\n\t\t\t}*/\r\n\t\t}\r\n\r\n\t\t\r\n\r\n\t\tfunction return_path(current_node, maze){\r\n\t\t\tlet path = [];\r\n\t\t\tlet current = current_node;\r\n\t\t\tlet result = new _helpers_Matrix__WEBPACK_IMPORTED_MODULE_0__.Matrix(width, height);\r\n\r\n\t\t\tfor (let i = 0; i < height; i++){\r\n\t\t\t\tfor (let j = 0; j < width; j++){\r\n\t\t\t\t\tresult[j][i] = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile (current !== undefined){\r\n\t\t\t\tpath.push(current.position);\r\n\t\t\t\tcurrent = current.parent;\r\n\t\t\t}\r\n\t\t\tpath = path.reverse();\r\n\t\t\tlet start_val = 0;\r\n\r\n\t\t\tfor (let i = 0; i < path.length; i++){\r\n\t\t\t\tconsole.log(start_val, path[i].w, path[i].h);\r\n\t\t\t\tresult[path[i].w][path[i].h] = start_val;\r\n\t\t\t\tstart_val++;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction search(maze, cost, start, end){\r\n\t\t\tlet start_node = new Node(undefined, start);\r\n\t\t\tlet end_node = new Node(undefined, end);\r\n\r\n\t\t\tstart_node.g = 0;\r\n\t\t\tstart_node.h = 0;\r\n\t\t\tstart_node.f = 0;\r\n\t\t\tend_node.g = 0;\r\n\t\t\tend_node.h = 0;\r\n\t\t\tend_node.f = 0;\r\n\r\n\t\t\tlet yet_to_visit_list = [];\r\n\t\t\tlet visited_list = [];\r\n\r\n\t\t\tyet_to_visit_list.push(start_node);\r\n\r\n\t\t\tlet outer_iterations = 0; //step\r\n\t\t\tlet max_iterations = parseInt(Math.pow(width / 2, 10));\r\n\r\n\t\t\tlet move = [new Point(-1, 0), new Point(0, -1), new Point(1, 0), new Point(0, 1)];\r\n\r\n\t\t\twhile (yet_to_visit_list.length > 0){\r\n\t\t\t\touter_iterations++;\r\n\r\n\t\t\t\tlet current_node = yet_to_visit_list[0];\r\n\t\t\t\tlet current_index = 0;\r\n\r\n\t\t\t\tfor (let index = 0; index < yet_to_visit_list.length; index++){\r\n\t\t\t\t\tlet item = yet_to_visit_list[index];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (item.f < current_node.f){\r\n\t\t\t\t\t\tcurrent_node = item;\r\n\t\t\t\t\t\tcurrent_index = index;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\tif (outer_iterations > max_iterations){\r\n\t\t\t\t\treturn return_path(current_node, maze);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tyet_to_visit_list.splice(current_index, 1);\r\n\t\t\t\tvisited_list.push(current_node);\r\n\r\n\t\t\t\tif (current_node.position.w == end_node.position.w && current_node.position.h == end_node.position.h){\r\n\t\t\t\t\tconsole.log(1);\r\n\t\t\t\t\treturn return_path(current_node, maze);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet children = [];\r\n\r\n\t\t\t\tfor (let new_position of move){\r\n\t\t\t\t\tlet x = current_node.position.w + new_position.w;\r\n\t\t\t\t\tlet y = current_node.position.h + new_position.h;\r\n\t\t\t\t\tlet node_position = new Point(x, y);\r\n\t\t\t\t\tlet node_x = node_position.w;\r\n\t\t\t\t\tlet node_y = node_position.h;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (node_x > (width - 1) || node_x < 0 || node_y > (height - 1) || node_y < 0){\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (maze[node_x][node_y] !== 0){\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet new_node = new Node(current_node, node_position);\r\n\r\n\t\t\t\t\tchildren.push(new_node);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let child of children){\r\n\t\t\t\t\tlet child_visited = [];\r\n\r\n\t\t\t\t\tfor (let visited_child of visited_list){\r\n\t\t\t\t\t\tif (visited_child === child){\r\n\t\t\t\t\t\t\tchild_visited.push(visited_child);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (child_visited.length > 0){\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tchild.g = current_node.g + cost;\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet child_x = Math.pow(child.position.w - end_node.position.w, 2);\r\n\t\t\t\t\tlet child_y = Math.pow(child.position.h - end_node.position.h, 2);\r\n\r\n\t\t\t\t\tchild.h = child_x + child_y;\r\n\t\t\t\t\tchild.f = child.g + child.h;\r\n\r\n\t\t\t\t\tlet arr = [];\r\n\r\n\t\t\t\t\tfor (let i of yet_to_visit_list){\r\n\t\t\t\t\t\tif (child === i && child.g > i.g){\r\n\t\t\t\t\t\t\tarr.push(i);\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (arr.length > 0){\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tyet_to_visit_list.push(child);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tlet cost = 1;\r\n\t\tlet answer = search(this.walls, cost, start, end);\r\n\r\n\t\tthis.print_matrix(answer);\t\t\r\n\r\n\t\tthis.queue.push({func: 'algo', var: arguments});\r\n\t}\r\n\r\n\t/**_labirint(){\r\n\t\tlet i = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tconsole.log('Ok');\r\n\t\t\tyield i++;\r\n\r\n\t\t\tif (i > 5)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}*/\r\n}\n\n//# sourceURL=webpack:///./src/Algos/a_star/main.js?");

/***/ }),

/***/ "./src/Algos/ant/main.js":
/*!*******************************!*\
  !*** ./src/Algos/ant/main.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Algo_Ant\": () => (/* binding */ Algo_Ant)\n/* harmony export */ });\n/* harmony import */ var _simulator_world_World_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./simulator/world/World.js */ \"./src/Algos/ant/simulator/world/World.js\");\n/* harmony import */ var _simulator_entity_Entity_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./simulator/entity/Entity_base.js */ \"./src/Algos/ant/simulator/entity/Entity_base.js\");\n/* harmony import */ var _simulator_entity_Ant_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./simulator/entity/Ant_base.js */ \"./src/Algos/ant/simulator/entity/Ant_base.js\");\n/* harmony import */ var _simulator_entity_Food_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./simulator/entity/Food.js */ \"./src/Algos/ant/simulator/entity/Food.js\");\n/* harmony import */ var _simulator_entity_Marker_food_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./simulator/entity/Marker_food.js */ \"./src/Algos/ant/simulator/entity/Marker_food.js\");\n/* harmony import */ var _simulator_entity_Marker_home_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./simulator/entity/Marker_home.js */ \"./src/Algos/ant/simulator/entity/Marker_home.js\");\n/* harmony import */ var _simulator_entity_Wall_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./simulator/entity/Wall.js */ \"./src/Algos/ant/simulator/entity/Wall.js\");\n/* harmony import */ var _simulator_entity_Colony_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./simulator/entity/Colony.js */ \"./src/Algos/ant/simulator/entity/Colony.js\");\n/* harmony import */ var _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../_helpers/Vector.js */ \"./src/Algos/_helpers/Vector.js\");\n/* harmony import */ var _simulator_Figure_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./simulator/Figure.js */ \"./src/Algos/ant/simulator/Figure.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* TODO:\r\n\tДобавить Феромоны наследуя их Entity_stackable\r\n\t2 типа Феромоно:\r\n\t\t1: феромон от дома\r\n\t\t2: Феромон от еды\r\n*/\r\n\r\nclass Algo_Ant{\r\n\tconstructor(width, height){\r\n\t\tthis.onstart = null;\r\n\t\tthis.onend = null;\r\n\t\t\r\n\t\tthis.ondraw = null;\r\n\t\t\r\n\t\tthis.ondestruct = null;\r\n\t\t\r\n\t\tthis.init(width, height);\r\n\t}\r\n\t\r\n\t*update(){\r\n\t\tif(this.onstart instanceof Function)\r\n\t\t\tthis.onstart.call(this)();\r\n\t\t\r\n\t\tlet deltaT = 0;\r\n\t\t\r\n\t\twhile(true){\r\n\t\t\tthis.world.tick(deltaT);\r\n\t\t\tthis.world.render(deltaT);\r\n\t\t\t\r\n\t\t\tdeltaT = yield;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onend instanceof Function)\r\n\t\t\tthis.onend.call(this);\r\n\t}\r\n\t\r\n\tresize(width, height){\r\n\t\tthis.world.destruct();\r\n\t\tthis.init(width, height);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tinit(width, height){\r\n\t\tthis.world = new _simulator_world_World_js__WEBPACK_IMPORTED_MODULE_0__.World(width, height);\r\n\t\tthis.world.ondraw = (deltaT, ctx, width, height) => {\r\n\t\t\tif(this.ondraw instanceof Function)\r\n\t\t\t\tthis.ondraw.call(this, deltaT, ctx);\r\n\t\t};\r\n\t\t\r\n\t\tfor(let i = 0; i < 1; i++){\r\n\t\t\tlet ent5 = new _simulator_entity_Ant_base_js__WEBPACK_IMPORTED_MODULE_2__.Ant_base(this.world);\r\n\t\t\t\r\n\t\t\tent5.setPos((new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_8__.Vector(0,0)).randomize(new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_8__.Vector(width, height)));\r\n\t\t\t\r\n\t\t\t// ent5.speed.x = 120;\r\n\t\t\t// ent5.speed.y = 200;\r\n\t\t}\r\n\t\t\r\n\t\tfor(let i = 0; i < 10000; i++){\r\n\t\t\t// let ent5 = new Food(this.world, (new Vector(100,100)).randomize(new Vector(width / 16 + 100, height / 16 + 100)));\r\n\t\t\t\r\n\t\t\t// ent5.speed.x = 120;\r\n\t\t\t// ent5.speed.y = 120;\r\n\t\t}\r\n\t\t\r\n\t\t// console.log(this.world.trace(new Vector(482, 200), new Vector(123.22567828474871, 790.7337744514194)));\r\n\t\t// console.log(this.world.trace(new Vector(783.3512, 210.17), new Vector(784.0217991873466, 210.1149655319573)));\r\n\t\t\r\n\t\t// let perf = performance.now();\r\n\t\t// for(let i = 0; i < 10000; i++){\r\n\t\t\t// this.world.checkByChunkPos(new Vector(100, 100), 100, 'food', null, 'Map32');\r\n\t\t// }\r\n\t\t// console.log(performance.now() - perf);\r\n\t}\r\n\t\r\n\t_figureCallbacker(x1, y1, x2, y2, size, type, callback){\r\n\t\tswitch(type){\r\n\t\t\tcase 'circle':\r\n\t\t\t\t// Figure.circle(x, y, size, callback);\r\n\t\t\t\t_simulator_Figure_js__WEBPACK_IMPORTED_MODULE_9__.Figure.circle(x1, y1, size, callback);\r\n\t\t\t\t_simulator_Figure_js__WEBPACK_IMPORTED_MODULE_9__.Figure.line(x1, y1, x2, y2, size * 2.75, callback);\r\n\t\t\t\t_simulator_Figure_js__WEBPACK_IMPORTED_MODULE_9__.Figure.circle(x2, y2, size, callback);\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase 'square':\r\n\t\t\t\tthrow Error('PI');\r\n\t\t\t\t// Figure.square(x1, y1, size, callback);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\tspawn(x1, y1, x2, y2, size, entity, type = 'circle'){\r\n\t\tswitch(entity){\r\n\t\t\tcase 'Food':\r\n\t\t\t\tentity = _simulator_entity_Food_js__WEBPACK_IMPORTED_MODULE_3__.Food;\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'Wall':\r\n\t\t\t\tentity = _simulator_entity_Wall_js__WEBPACK_IMPORTED_MODULE_6__.Wall;\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'Colony':\r\n\t\t\t\tentity = _simulator_entity_Colony_js__WEBPACK_IMPORTED_MODULE_7__.Colony;\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'Ant_base':\r\n\t\t\t\tentity = _simulator_entity_Ant_base_js__WEBPACK_IMPORTED_MODULE_2__.Ant_base;\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'Marker_food':\r\n\t\t\t\tentity = _simulator_entity_Marker_food_js__WEBPACK_IMPORTED_MODULE_4__.Marker_food;\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'Marker_home':\r\n\t\t\t\tentity = _simulator_entity_Marker_home_js__WEBPACK_IMPORTED_MODULE_5__.Marker_home;\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'Entity_base':\r\n\t\t\t\tentity = _simulator_entity_Entity_base_js__WEBPACK_IMPORTED_MODULE_1__.Entity_base;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\tx1 = Math.floor(x1);\r\n\t\tx2 = Math.floor(x2);\r\n\t\ty1 = Math.floor(y1);\r\n\t\ty2 = Math.floor(y2);\r\n\t\t\r\n\t\tthis._figureCallbacker(x1, y1, x2, y2, size, type, (x, y) => {\r\n\t\t\tlet SpawnPos = new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_8__.Vector(x, y);\r\n\t\t\t\r\n\t\t\tif(!this.world._isOutWorld(SpawnPos))\r\n\t\t\t\tnew entity(this.world, SpawnPos, 90);\r\n\t\t});\r\n\t}\r\n\t\r\n\terase(x1, y1, x2, y2, size, filter = '', type = 'circle'){\r\n\t\tx1 = Math.floor(x1);\r\n\t\tx2 = Math.floor(x2);\r\n\t\ty1 = Math.floor(y1);\r\n\t\ty2 = Math.floor(y2);\r\n\t\t\r\n\t\tthis._figureCallbacker(x1, y1, x2, y2, size, type, (x, y) => {\r\n\t\t\tlet pos = new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_8__.Vector(x, y);\r\n\t\t\tlet ents = this.world.getByChuckPos(pos, 0, filter, null, 'Map1');\r\n\t\t\t\r\n\t\t\t_simulator_entity_Wall_js__WEBPACK_IMPORTED_MODULE_6__.Wall.destruct(this.world, pos);\r\n\t\t\t\r\n\t\t\tfor(let i in ents){\r\n\t\t\t\tents[i].destruct();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tdestruct(){\r\n\t\tif(this.ondestruct instanceof Function)\r\n\t\t\tthis.ondestruct.call(this);\r\n\t\t\r\n\t\tthis.world.destruct();\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/main.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/Figure.js":
/*!*******************************************!*\
  !*** ./src/Algos/ant/simulator/Figure.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Figure\": () => (/* binding */ Figure)\n/* harmony export */ });\nclass Figure{\r\n\tstatic line(x0, y0, x1, y1, wd, callback){\r\n\t\tlet dx = Math.abs(x1-x0);\r\n\t\tlet sx = x0 < x1 ? 1 : -1;\r\n\t\tlet dy = Math.abs(y1-y0);\r\n\t\tlet sy = y0 < y1 ? 1 : -1;\r\n\t\tlet err = dx-dy\r\n\t\tlet e2;\r\n\t\tlet x2;\r\n\t\tlet y2;\r\n\t\tlet ed = dx+dy == 0 ? 1 : Math.sqrt(dx**2 + dy**2);\r\n\t\t\r\n\t\tfor (wd = (wd+1)/2; ; ) {\r\n\t\t\tif(callback(x0, y0) === false)\r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\te2 = err; x2 = x0;\r\n\t\t\t\r\n\t\t\tif (2*e2 >= -dx) {\r\n\t\t\t\tfor (e2 += dy, y2 = y0; e2 < ed*wd && (y1 != y2 || dx > dy); e2 += dx)\r\n\t\t\t\t\tif(callback(x0, y2 += sy) === false)\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t\tif (x0 == x1) break;\r\n\t\t\t\t\te2 = err; err -= dy; x0 += sx;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (2*e2 <= dy) {\r\n\t\t\t\tfor (e2 = dx-e2; e2 < ed*wd && (x1 != x2 || dx < dy); e2 += dy)\r\n\t\t\t\t\tif(callback(x2 += sx, y0) === false)\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t\tif (y0 == y1) break;\r\n\t\t\t\t\terr += dx; y0 += sy;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic bsline(x0, y0, x1, y1, callback){\r\n\t\tif(x1 < x0)\r\n\t\t\t[ x1, x0 ] = [ x0, x1 ];\r\n\t\t\r\n\t\tif(y1 < y0)\r\n\t\t\t[ y1, y0 ] = [ y0, y1 ];\r\n\t\t\r\n\t\tlet dx = x1 - x0;\r\n\t\tlet dy = y1 - y0;\r\n\t\tlet p = 2 * (dy) - (dx);\r\n\t\t\r\n\t\tif(callback(x0, y0) === false)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif(Math.floor(x0) === Math.floor(x1) || Math.floor(y0) === Math.floor(y1))\r\n\t\t\treturn;\r\n\t\t\r\n\t\twhile(x0 < x1){\r\n\t\t\tif(p < 0){\r\n\t\t\t\tp = p + 2 * (dy);\r\n\t\t\t}else{\r\n\t\t\t\ty0++;\r\n\t\t\t\tp = p + 2 * (dy - dx);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tx0++;\r\n\t\t\t\r\n\t\t\tif(callback(x0, y0) === false)\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic circle(cx, cy, radius, callback){\r\n\t\tlet radius_sqr = radius ** 2;\r\n\t\t\r\n\t\tfor (let  x = -radius; x < radius ; x++){\r\n\t\t\tlet hh = Math.sqrt(radius_sqr - x * x);\r\n\t\t\tlet rx = cx + x;\r\n\t\t\tlet ph = cy+hh;\r\n\t\t\t\r\n\t\t\tfor (let y = cy-hh; y < ph; y++)\r\n\t\t\t\tif(callback(rx, y) === false)\r\n\t\t\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic square(cx, cy, radius, callback){\r\n\t\tthrow Error('not realised');\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/Figure.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/entity/Ant_base.js":
/*!****************************************************!*\
  !*** ./src/Algos/ant/simulator/entity/Ant_base.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ant_base\": () => (/* binding */ Ant_base)\n/* harmony export */ });\n/* harmony import */ var _Entity_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity_base.js */ \"./src/Algos/ant/simulator/entity/Entity_base.js\");\n/* harmony import */ var _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_helpers/Vector.js */ \"./src/Algos/_helpers/Vector.js\");\n/* harmony import */ var _Marker_home_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Marker_home.js */ \"./src/Algos/ant/simulator/entity/Marker_home.js\");\n/* harmony import */ var _Marker_food_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Marker_food.js */ \"./src/Algos/ant/simulator/entity/Marker_food.js\");\n/* harmony import */ var _Marker_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Marker.js */ \"./src/Algos/ant/simulator/entity/Marker.js\");\n/* harmony import */ var _Food_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Food.js */ \"./src/Algos/ant/simulator/entity/Food.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Ant_base extends _Entity_base_js__WEBPACK_IMPORTED_MODULE_0__.Entity_base{\r\n\tconstructor(world, pos = new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector(0, 0), speed = new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector(0, 100)){\r\n\t\tsuper(world, pos, speed);\r\n\t\t\r\n\t\t// this.marker_detect_dist = 40;\r\n\t\tthis.direction_update_per = 0.25;\r\n\t\tthis.marker_per = 0.25;\r\n\t\tthis.direction_noise = Math.PI * 0.02;\r\n\t\tthis.repellent_period = 128;\r\n\t\t\r\n\t\t// this.weigth = 3;\r\n\t\t// this.height = 4.7;\r\n\t\t\r\n\t\tthis.hasFood = false;\r\n\t\t\r\n\t\tthis.size = new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector(10, 3).mul(2);\r\n\t\tthis.noise_seed = 0;\r\n\t}\r\n\t\r\n\t/*\r\n\t\tКогда муравей возращается маркеры домой деградируют на коффециент\r\n\t*/\r\n\t\r\n\tpickupFood(Hit){\r\n\t\tif(Hit.hitEntity instanceof _Food_js__WEBPACK_IMPORTED_MODULE_5__.Food){\r\n\t\t\tthis.hasFood = true;\r\n\t\t\tHit.hitEntity.stack--;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// checkFood(){\r\n\t\t\r\n\t// }\r\n\t\r\n\tlogicBioMarker(){\r\n\t\tlet samples = 32;\r\n\t\tlet findAng = 0.5 * Math.PI;\r\n\t\t\r\n\t\t// for() /* Семплирования, остановился тут */\r\n\t\t\tlet RDirection = (new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector(0)).randomize(new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector(1)).normalize();\r\n\t\t\tlet Hit;\r\n\t\t\tlet CMarker = this.hasFood ? _Marker_home_js__WEBPACK_IMPORTED_MODULE_2__.Marker_home : _Marker_food_js__WEBPACK_IMPORTED_MODULE_3__.Marker_food;\r\n\t\t\t\r\n\t\t\tif(!(Hit = this.world.trace(this.getPos().add(RDirection.mul(2)), RDirection.mul(5), CMarker, this, false)).isRangeOut && Hit.hitEntity != null)\r\n\t\t\t\tthis.speed = RDirection.mul(this.speed.length());\r\n\t}\r\n\t\r\n\tplaceBioMarker(Hit){\r\n\t\tif(this.hasFood)\r\n\t\t\tnew _Marker_food_js__WEBPACK_IMPORTED_MODULE_3__.Marker_food(this.world, Hit.pos, 90);\r\n\t\telse\r\n\t\t\tnew _Marker_home_js__WEBPACK_IMPORTED_MODULE_2__.Marker_home(this.world, Hit.pos, 90);\r\n\t}\r\n\t\r\n\tgetBioMarkerIntensity(){\r\n\t\t\r\n\t}\r\n\t\r\n\trender(deltaT, ctx, width, height){\r\n\t\tlet pos = this.getPos().floor();\r\n\t\tlet ang = this.speed.normalize().toAngle();\r\n\t\tlet size = this.size;\r\n\t\t\r\n\t\tlet sizeXR = size.div(2).setY(0).rotate(ang);\r\n\t\tlet sizeYR = size.div(2).setX(0).rotate(ang);\r\n\t\t\r\n\t\tlet size2R = sizeXR.add(sizeYR);\r\n\t\tlet size2IR = sizeXR.add(sizeYR.inv());\r\n\t\t\r\n\t\tlet p1 = pos.sub(size2R);\r\n\t\tlet p2 = pos.sub(size2IR);\r\n\t\tlet p3 = pos.add(size2R);\r\n\t\tlet p4 = pos.add(size2IR);\r\n\t\t\r\n\t\tctx.fillStyle = 'gray';\r\n\t\t\r\n\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(...p1);\r\n\t\t\tctx.lineTo(...p2);\r\n\t\t\tctx.lineTo(...p3);\r\n\t\t\tctx.lineTo(...p4);\r\n\t\tctx.fill();\r\n\t\t\r\n\t\t// ctx.beginPath();\r\n\t\t\t// ctx.moveTo(...end);\r\n\t\t\t// ctx.lineTo(...start);\r\n\t\t\t\r\n\t\t\t// ctx.moveTo(...center);\r\n\t\t\t// ctx.lineTo(...center.sub(ptl));\r\n\t\t\t// ctx.moveTo(...center);\r\n\t\t\t// ctx.lineTo(...center.sub(ptr));\r\n\t\t\t\r\n\t\t\t// ctx.moveTo(...end);\r\n\t\t\t// ctx.lineTo(...end.sub(ptl));\r\n\t\t\t// ctx.moveTo(...end);\r\n\t\t\t// ctx.lineTo(...end.sub(ptr));\t\t\r\n\t\t\t\r\n\t\t\t// ctx.moveTo(...start);\r\n\t\t\t// ctx.lineTo(...start.sub(ptl));\r\n\t\t\t// ctx.moveTo(...start);\r\n\t\t\t// ctx.lineTo(...start.sub(ptr));\r\n\t\t// ctx.stroke();\r\n\t\t\r\n\t}\r\n\t\r\n\ttick(deltaT){\r\n\t\tif(this.speed.isZero()) return;\r\n\t\t\r\n\t\tthis.logicBioMarker();\r\n\t\t\r\n\t\tfunction random_noise_sin(x){\r\n\t\t\treturn -0.143 * Math.sin(1.75 * (x + 1.73)) - 0.180 * Math.sin(2.96 * (x + 4.98)) - 0.012 * Math.sin(6.23 * (x + 3.17)) + 0.088 * Math.sin(8.07 * (x + 4.63));\r\n\t\t}\r\n\t\t\r\n\t\tthis.speed = this.speed.rotate(random_noise_sin(this.noise_seed += _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector.random(0.001, 0.01)) / 40);\r\n\t\t\r\n\t\tlet Hit;\r\n\t\tlet Direct = this.speed.mul(deltaT);\r\n\t\t\r\n\t\tif(!(Hit = this.world.trace(this.getPos(), Direct, 'Food', this)).isRangeOut && Hit.hitEntity != null)\r\n\t\t\tthis.pickupFood(Hit);\r\n\t\t\r\n\t\tif(!(Hit = this.world.trace(this.getPos(), Direct, '', this)).isRangeOut){\r\n\t\t\tif(!Hit.normal.length()) return;\r\n\t\t\t\r\n\t\t\tthis.speed = this.speed.sub(this.speed.projectOnto(Hit.normal).mul(2));\r\n\t\t\tDirect = this.speed.mul(deltaT);\r\n\t\t}\r\n\t\t\r\n\t\tif(!(Hit = this.world.trace(this.getPos(), Direct, '', this)).isRangeOut)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tthis.setPos(Hit.pos);\r\n\t\tthis.placeBioMarker(Hit);\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/entity/Ant_base.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/entity/Colony.js":
/*!**************************************************!*\
  !*** ./src/Algos/ant/simulator/entity/Colony.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Colony\": () => (/* binding */ Colony)\n/* harmony export */ });\n/* harmony import */ var _Entity_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity_base.js */ \"./src/Algos/ant/simulator/entity/Entity_base.js\");\n/* harmony import */ var _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_helpers/Vector.js */ \"./src/Algos/_helpers/Vector.js\");\n/* harmony import */ var _Ant_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Ant_base.js */ \"./src/Algos/ant/simulator/entity/Ant_base.js\");\n/* harmony import */ var _Marker_home_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Marker_home.js */ \"./src/Algos/ant/simulator/entity/Marker_home.js\");\n/* harmony import */ var _Marker_food_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Marker_food.js */ \"./src/Algos/ant/simulator/entity/Marker_food.js\");\n/* harmony import */ var _Food_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Food.js */ \"./src/Algos/ant/simulator/entity/Food.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Colony extends _Entity_base_js__WEBPACK_IMPORTED_MODULE_0__.Entity_base{\r\n\tstatic #create_Colony_id = 0;\r\n\t\r\n\tconstructor(world, pos, ...arg){ /* TODO: on construct add config menu */\r\n\t\t\r\n\t\tif(!world.checkByChunkPos(pos, 10, 'Colony', null)){\r\n\t\t\tsuper(world, pos, ...arg);\r\n\t\t}else return {};\r\n\t\t\r\n\t\tthis.maxAnt = 100;\r\n\t\tthis.ants = 0;\r\n\t\tthis.isCollide = true;\r\n\t\tthis.Colony_id = Colony.#create_Colony_id++;\r\n\t}\r\n\t\r\n\tsetPos(){}\r\n\t\r\n\trender(deltaT, ctx, width, height){\r\n\t\tctx.fillStyle = 'red';\r\n\t\t\r\n\t\tlet size = 10;\r\n\t\t\r\n\t\tctx.beginPath();\r\n\t\t\tctx.arc(...this.getPos().sub((new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector(size)).div(2)).floor(), size, 0, 2 * Math.PI);\r\n\t\tctx.fill();\r\n\t}\r\n\t\r\n\ttick(deltaT){ /* TODO: On destruct ant, spawn new ant */\r\n\t\tif(this.ants < this.maxAnt){\r\n\t\t\tlet rv = new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector(20);\r\n\t\t\tlet Ant = null;\r\n\t\t\t\r\n\t\t\tif((Ant = new _Ant_base_js__WEBPACK_IMPORTED_MODULE_2__.Ant_base(this.world, this.getPos().add(rv.inv().randomize(rv)))) instanceof _Ant_base_js__WEBPACK_IMPORTED_MODULE_2__.Ant_base){\r\n\t\t\t\tAnt.rotate(_helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector.random(0, Math.PI * 2));\r\n\t\t\t\tthis.ants++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/entity/Colony.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/entity/Entity_base.js":
/*!*******************************************************!*\
  !*** ./src/Algos/ant/simulator/entity/Entity_base.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Entity_base\": () => (/* binding */ Entity_base)\n/* harmony export */ });\n/* harmony import */ var _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../_helpers/Vector.js */ \"./src/Algos/_helpers/Vector.js\");\n\r\n\r\nclass Entity_base{\r\n\tstatic #create_id = 0;\r\n\t\r\n\t#pos;\r\n\t\r\n\tconstructor(world, pos = new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector(0, 0), speed = new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector(0, 0)){\r\n\t\tthis.id = Entity_base.#create_id++;\r\n\t\t\r\n\t\tthis.speed = speed;\r\n\t\tthis.#pos = pos;\r\n\t\tthis.world = world;\r\n\t\t\r\n\t\tthis.isCollide = false;\r\n\t\tthis.ondestruct;\r\n\t\t\r\n\t\tthis._UpdateInWorldMap(pos);\r\n\t\tthis.world.setEntityProp(this);\r\n\t}\r\n\t\r\n\t_UpdateInWorldMap(NPos, LPos = null){ /* TODO: добавить многомерность ентитей */\r\n\t\tif(LPos){\r\n\t\t\tlet LPos1 = LPos.floor();\r\n\t\t\tlet LPos16 = LPos1.div(16).floor();\r\n\t\t\tlet LPos32 = LPos1.div(32).floor();\r\n\t\t\t\r\n\t\t\tdelete this.world.Map1[LPos1.x][LPos1.y].inObj[this.id];\r\n\t\t\tdelete this.world.Map16[LPos16.x][LPos16.y].inObj[this.id];\r\n\t\t\tdelete this.world.Map32[LPos32.x][LPos32.y].inObj[this.id];\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.world._isOutWorld(NPos)){\r\n\t\t\tlet NPos1 = NPos.floor();\r\n\t\t\tlet NPos16 = NPos1.div(16).floor();\r\n\t\t\tlet NPos32 = NPos1.div(32).floor();\r\n\t\t\t\r\n\t\t\tthis.world.Map1[NPos1.x][NPos1.y].inObj[this.id] = this;\r\n\t\t\tthis.world.Map16[NPos16.x][NPos16.y].inObj[this.id] = this;\r\n\t\t\tthis.world.Map32[NPos32.x][NPos32.y].inObj[this.id] = this;\r\n\t\t}\r\n\t}\r\n\t\r\n\tsetPos(pos){\r\n\t\tthis._UpdateInWorldMap(pos, this.#pos);\r\n\t\tthis.#pos = pos;\r\n\t}\r\n\t\r\n\tgetPos(){\r\n\t\treturn this.#pos;\r\n\t}\r\n\t\r\n\trotate(ang){\r\n\t\tthis.speed = this.speed.rotate(ang);\r\n\t}\r\n\t\r\n\trender(deltaT, ctx, width, height){\r\n\t\tlet pos = this.#pos.floor();\r\n\t\t\r\n\t\tlet size = new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector(10);\r\n\t\t\r\n\t\tctx.fillStyle = 'gray';\r\n\t\tctx.fillRect(...pos.sub(size.div(2)), ...size);\r\n\t\t\r\n\t\tif(this.speed.isZero()) return;\r\n\t\t\r\n\t\tlet move = this.speed.div(10);\r\n\t\tlet move_n = move.normalize();\r\n\t\t\r\n\t\tlet sVec = pos.add(move_n.mul(size));\r\n\t\tlet eVec = sVec.add(move);\r\n\t\tlet rVec = move_n.inv().mul(size.div(2));\r\n\t\t\r\n\t\tctx.strokeStyle = 'white';\r\n\t\tctx.lineWidth = 2;\r\n\t\t\r\n\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(...sVec);\r\n\t\t\tctx.lineTo(...eVec);\r\n\t\t\tctx.lineTo(...eVec.add(rVec.rotateDeg(45)));\r\n\t\t\tctx.lineTo(...eVec.add(rVec.rotateDeg(-45)));\r\n\t\t\tctx.lineTo(...eVec);\r\n\t\tctx.stroke();\r\n\t}\r\n\t\r\n\ttick(deltaT){\r\n\t\tif(this.speed.isZero()) return;\r\n\t\t\r\n\t\tlet Hit;\r\n\t\tlet Direct = this.speed.mul(deltaT);\r\n\t\t\r\n\t\tif(!(Hit = this.world.trace(this.#pos, Direct, '', this)).isRangeOut){\r\n\t\t\tif(!Hit.normal.length()) return;\r\n\t\t\t\r\n\t\t\tthis.speed = this.speed.sub(this.speed.projectOnto(Hit.normal).mul(2));\r\n\t\t\tDirect = this.speed.mul(deltaT);\r\n\t\t}\r\n\t\t\r\n\t\tif(!(Hit = this.world.trace(this.#pos, Direct, '', this)).isRangeOut)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tthis.setPos(Hit.pos);\r\n\t}\r\n\t\r\n\tdestruct(){\r\n\t\tif(this.ondestruct instanceof Function)\r\n\t\t\tthis.ondestruct.call(this);\r\n\t\t\r\n\t\tthis.world.setEntityProp(this, { draw: false, tick: false });\r\n\t\t\r\n\t\tlet pos1 = this.#pos.floor();\r\n\t\tlet pos16 = pos1.div(16).floor();\r\n\t\tlet pos32 = pos1.div(32).floor();\r\n\t\t\r\n\t\tdelete this.world.Map1[pos1.x][pos1.y].inObj[this.id];\r\n\t\tdelete this.world.Map16[pos16.x][pos16.y].inObj[this.id];\r\n\t\tdelete this.world.Map32[pos32.x][pos32.y].inObj[this.id];\r\n\t\t\r\n\t\tthis.#pos = null;\r\n\t\tdelete this.speed;\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/entity/Entity_base.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/entity/Entity_stackable.js":
/*!************************************************************!*\
  !*** ./src/Algos/ant/simulator/entity/Entity_stackable.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Entity_stackable\": () => (/* binding */ Entity_stackable)\n/* harmony export */ });\n/* harmony import */ var _Entity_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity_base.js */ \"./src/Algos/ant/simulator/entity/Entity_base.js\");\n/* harmony import */ var _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_helpers/Vector.js */ \"./src/Algos/_helpers/Vector.js\");\n\r\n\r\n\r\nclass Entity_stackable extends _Entity_base_js__WEBPACK_IMPORTED_MODULE_0__.Entity_base{\r\n\t\r\n\tconstructor(world, pos, chance = 0, maxStack = Infinity, stackRange = 5, ...args){\r\n\t\tif(pos === undefined) throw TypeError('pos is undefined');\r\n\t\t\r\n\t\tlet ents = world.getByRange(pos, stackRange, new.target.name, null, 'Map16');\r\n\t\t\r\n\t\tif(Math.random() * 100 <= chance) return {};\r\n\t\t\r\n\t\t/* if(ents.length > 1){\r\n\t\t\tthrow Error(new.target.name + ' not one from this pos ' + pos);\r\n\t\t}else */ if(ents.length){\r\n\t\t\tif(ents[0].stack < ents[0].maxStack)\r\n\t\t\t\tents[0].stack = Math.min(ents[0].stack + 1, ents[0].maxStack);\r\n\t\t}else{\r\n\t\t\tsuper(world, pos, ...args);\r\n\t\t\t\r\n\t\t\tthis.maxStack = maxStack;\r\n\t\t\tthis.stack = 1;\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\treturn {};\r\n\t}\r\n\t\r\n\t_hsv2rgb(h,s,v){\r\n\t\tlet f= (n,k=(n+h/60)%6) => v - v*s*Math.max( Math.min(k,4-k,1), 0);\r\n\t\tlet format = (n) => Math.floor(n * 255).toString(16).padStart(2, '0');\r\n\t\t\r\n\t\treturn '#' + format(f(5)) + format(f(3)) + format(f(1));\r\n\t}\r\n\t\r\n\tsetPos(pos){}\r\n\t\r\n\ttick(deltaT){\r\n\t\tif(this.stack <= 0)\r\n\t\t\tthis.destruct();\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/entity/Entity_stackable.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/entity/Food.js":
/*!************************************************!*\
  !*** ./src/Algos/ant/simulator/entity/Food.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Food\": () => (/* binding */ Food)\n/* harmony export */ });\n/* harmony import */ var _Entity_stackable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity_stackable.js */ \"./src/Algos/ant/simulator/entity/Entity_stackable.js\");\n/* harmony import */ var _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_helpers/Vector.js */ \"./src/Algos/_helpers/Vector.js\");\n\r\n\r\n\r\nclass Food extends _Entity_stackable_js__WEBPACK_IMPORTED_MODULE_0__.Entity_stackable{\r\n\tconstructor(world, pos, chance, maxStack = 120, ...args){\r\n\t\tsuper(world, pos, chance, maxStack, 3, ...args);\r\n\t\tthis.isCollide = true;\r\n\t}\r\n\t\r\n\trender(deltaT, ctx, width, height){\r\n\t\tctx.fillStyle = this._hsv2rgb(240 - Math.min(this.stack, 120), 1, 1);\r\n\t\t\r\n\t\tlet size = 3;\r\n\t\t\r\n\t\tctx.beginPath();\r\n\t\tctx.arc(...this.getPos().sub((new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector(size)).div(2)).floor(), size, 0, 2 * Math.PI);\r\n\t\tctx.fill();\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/entity/Food.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/entity/Food_sprite.js":
/*!*******************************************************!*\
  !*** ./src/Algos/ant/simulator/entity/Food_sprite.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Food\": () => (/* binding */ Food)\n/* harmony export */ });\n/* harmony import */ var _Entity_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity_base.js */ \"./src/Algos/ant/simulator/entity/Entity_base.js\");\n\r\n\r\nclass Food extends _Entity_base_js__WEBPACK_IMPORTED_MODULE_0__.Entity_base{\r\n\t\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/entity/Food_sprite.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/entity/Marker.js":
/*!**************************************************!*\
  !*** ./src/Algos/ant/simulator/entity/Marker.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Marker\": () => (/* binding */ Marker)\n/* harmony export */ });\n/* harmony import */ var _Entity_stackable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity_stackable.js */ \"./src/Algos/ant/simulator/entity/Entity_stackable.js\");\n/* harmony import */ var _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_helpers/Vector.js */ \"./src/Algos/_helpers/Vector.js\");\n\r\n\r\n\r\nclass Marker extends _Entity_stackable_js__WEBPACK_IMPORTED_MODULE_0__.Entity_stackable{\r\n\tconstructor(world, pos, chance, maxStack = 1, ...args){\r\n\t\tsuper(world, pos, chance, maxStack, 2, ...args);\r\n\t\tthis.color = 240;\r\n\t\tthis.defaultDegradate = 0.25;\r\n\t}\r\n\t\r\n\trender(deltaT, ctx, width, height){\r\n\t\t// super.render(deltaT, ctx, width, height);\r\n\t\t// ctx.fillStyle = this._hsv2rgb(240 - Math.min(this.stack, 120), 1, 1);\r\n\t\tctx.fillStyle = this._hsv2rgb(this.color, 0.85, (this.stack / this.maxStack) * 0.75 + 0.25);\r\n\t\t\r\n\t\tlet size = 2;\r\n\t\t\r\n\t\tctx.beginPath();\r\n\t\t\tctx.arc(...this.getPos().sub((new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector(size)).div(2)).floor(), size, 0, 2 * Math.PI);\r\n\t\tctx.fill();\r\n\t}\r\n\t\r\n\ttick(deltaT){\r\n\t\tthis.stack -= this.defaultDegradate * deltaT;\r\n\t\t\r\n\t\tsuper.tick(deltaT);\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/entity/Marker.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/entity/Marker_food.js":
/*!*******************************************************!*\
  !*** ./src/Algos/ant/simulator/entity/Marker_food.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Marker_food\": () => (/* binding */ Marker_food)\n/* harmony export */ });\n/* harmony import */ var _Entity_stackable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity_stackable.js */ \"./src/Algos/ant/simulator/entity/Entity_stackable.js\");\n/* harmony import */ var _Marker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Marker.js */ \"./src/Algos/ant/simulator/entity/Marker.js\");\n\r\n\r\n\r\nclass Marker_food extends _Marker_js__WEBPACK_IMPORTED_MODULE_1__.Marker{\r\n\tconstructor(...args){\r\n\t\tsuper(...args);\r\n\t\tthis.color = 120;\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/entity/Marker_food.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/entity/Marker_home.js":
/*!*******************************************************!*\
  !*** ./src/Algos/ant/simulator/entity/Marker_home.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Marker_home\": () => (/* binding */ Marker_home)\n/* harmony export */ });\n/* harmony import */ var _Entity_stackable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity_stackable.js */ \"./src/Algos/ant/simulator/entity/Entity_stackable.js\");\n/* harmony import */ var _Marker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Marker.js */ \"./src/Algos/ant/simulator/entity/Marker.js\");\n\r\n\r\n\r\nclass Marker_home extends _Marker_js__WEBPACK_IMPORTED_MODULE_1__.Marker{\r\n\tconstructor(...args){\r\n\t\tsuper(...args);\r\n\t\tthis.color = 0;\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/entity/Marker_home.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/entity/Wall.js":
/*!************************************************!*\
  !*** ./src/Algos/ant/simulator/entity/Wall.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Wall\": () => (/* binding */ Wall)\n/* harmony export */ });\n/* harmony import */ var _Entity_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity_base.js */ \"./src/Algos/ant/simulator/entity/Entity_base.js\");\n\r\n\r\nclass Wall extends _Entity_base_js__WEBPACK_IMPORTED_MODULE_0__.Entity_base{\r\n\tconstructor(world, pos, ...args){\r\n\t\tpos = pos.floor();\r\n\t\t\r\n\t\tif(world._isOutWorld(pos)) return {};\r\n\t\t\r\n\t\tworld.Map1[pos.x][pos.y].isWall = true;\r\n\t\tworld.offscreenWallsBuffering.fillRect(...pos, 1, 1);\r\n\t\t\r\n\t\treturn {};\r\n\t}\r\n\t\r\n\tstatic destruct(world, pos){\r\n\t\tpos = pos.floor();\r\n\t\t\r\n\t\tif(world._isOutWorld(pos)) return;\r\n\t\t\r\n\t\tworld.Map1[pos.x][pos.y].isWall = false;\r\n\t\tworld.offscreenWallsBuffering.clearRect(...pos, 1, 1);\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/entity/Wall.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/world/Hit.js":
/*!**********************************************!*\
  !*** ./src/Algos/ant/simulator/world/Hit.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Hit\": () => (/* binding */ Hit)\n/* harmony export */ });\nclass Hit{\r\n\tconstructor(pos, Lpos, hitEntity, isWorld, isRangeOut){\r\n\t\tthis.pos = pos;\r\n\t\tthis.normal = Lpos.sub(pos.floor()).normalize();\r\n\t\tthis.hitEntity = hitEntity;\r\n\t\tthis.isWorld = isWorld;\r\n\t\tthis.isRangeOut = isRangeOut;\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/world/Hit.js?");

/***/ }),

/***/ "./src/Algos/ant/simulator/world/World.js":
/*!************************************************!*\
  !*** ./src/Algos/ant/simulator/world/World.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"World\": () => (/* binding */ World)\n/* harmony export */ });\n/* harmony import */ var _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../_helpers/Vector.js */ \"./src/Algos/_helpers/Vector.js\");\n/* harmony import */ var _Figure_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Figure.js */ \"./src/Algos/ant/simulator/Figure.js\");\n/* harmony import */ var _Hit_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Hit.js */ \"./src/Algos/ant/simulator/world/Hit.js\");\n\r\n\r\n\r\n\r\nclass World{\r\n\tconstructor(width, height){\r\n\t\tthis._refillMap(width, height);\r\n\t\tthis.renderList = {};\r\n\t\tthis.tickList = {};\r\n\t\t\r\n\t\tthis.ondraw = null;\r\n\t\tthis.ondestruct = null;\r\n\t\t\r\n\t\tthis.offscreenCanvas = document.createElement('canvas');\r\n\t\tthis.offscreenCanvas.width = width;\r\n\t\tthis.offscreenCanvas.height = height;\r\n\t\t\r\n\t\tthis.offscreenWallsCanvas = document.createElement('canvas');\r\n\t\tthis.offscreenWallsCanvas.width = width;\r\n\t\tthis.offscreenWallsCanvas.height = height;\r\n\t\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\t\r\n\t\tthis.offscreenBuffering = this.offscreenCanvas.getContext('2d', { alpha: false });\r\n\t\tthis.offscreenWallsBuffering = this.offscreenWallsCanvas.getContext('2d');\r\n\t\tthis.offscreenWallsBuffering.fillStyle = 'lightgrey';\r\n\t}\r\n\t/*\r\n\t\tModifing:\r\n\t\t\t16 x 16 x 16\r\n\t\t\t x     x      x\r\n\t\t\t16 x 16 x 16\r\n\t\t\t x     x      x\r\n\t\t\t16 x 16 x 16\r\n\t\t\t\r\n\t\t\t1: adds grid 48x48 (max search 16x16) for alls entities (faster search)\r\n\t\t\t\r\n\t\t\t32 x 32 x 32\r\n\t\t\t x      x      x\r\n\t\t\t32 x 32 x 32\r\n\t\t\t x      x      x\r\n\t\t\t32 x 32 x 32\r\n\t\t\t\r\n\t\t\t2: adds grid 96x96 (max search 32x32) for ...\r\n\t*/\r\n\t\r\n\t_refillMap(width, height){\r\n\t\tthis.Map1 = [];\r\n\t\t\r\n\t\tfor(let x = 0; x < width; x++){\r\n\t\t\tthis.Map1.push([])\r\n\t\t\tlet Map1 = this.Map1[x];\r\n\t\t\t\r\n\t\t\tfor(let y = 0; y < height; y++){\r\n\t\t\t\tMap1.push({\r\n\t\t\t\t\tisWall: false,\r\n\t\t\t\t\tinObj: {},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.Map16 = [];\r\n\t\t\r\n\t\tlet width16 = Math.ceil(width / 16);\r\n\t\tlet height16 = Math.ceil(height / 16);\r\n\t\t\r\n\t\tfor(let x = 0; x < width16; x++){\r\n\t\t\tthis.Map16.push([])\r\n\t\t\tlet Map16 = this.Map16[x];\r\n\t\t\t\r\n\t\t\tfor(let y = 0; y < height16; y++){\r\n\t\t\t\tMap16.push({\r\n\t\t\t\t\t// isWall: false,\r\n\t\t\t\t\tinObj: {},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.Map32 = [];\r\n\t\t\r\n\t\tlet width32 = Math.ceil(width / 32);\r\n\t\tlet height32 = Math.ceil(height / 32);\r\n\t\t\r\n\t\tfor(let x = 0; x < width32; x++){\r\n\t\t\tthis.Map32.push([])\r\n\t\t\tlet Map32 = this.Map32[x];\r\n\t\t\t\r\n\t\t\tfor(let y = 0; y < height32; y++){\r\n\t\t\t\tMap32.push({\r\n\t\t\t\t\t// isWall: false,\r\n\t\t\t\t\tinObj: {},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t_isOutWorld(vec){\r\n\t\treturn vec.x < 0 || vec.y < 0 || Math.floor(vec.x) > (this.width - 1) || Math.floor(vec.y) > (this.height - 1);\r\n\t}\r\n\t\r\n\t/* Search function optimazed */\r\n\t\r\n\t_SelectSearchParam(range, SearchMap){\r\n\t\tlet ceilRange = null;\r\n\t\tlet Scale = null;\r\n\t\tlet Maps = null;\r\n\t\t\r\n\t\tif(SearchMap === 'auto'){\r\n\t\t\tif(range >= 32){\r\n\t\t\t\tSearchMap = 'Map32';\r\n\t\t\t}else if(range >= 2){\r\n\t\t\t\tSearchMap = 'Map16';\r\n\t\t\t}else{\r\n\t\t\t\tSearchMap = 'Map1';\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tswitch(SearchMap){\r\n\t\t\tcase 'Map1':\r\n\t\t\t\tceilRange = Math.ceil(range);\r\n\t\t\t\tMaps = this.Map1;\r\n\t\t\t\tScale = 1;\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase 'Map16':\r\n\t\t\t\tceilRange = Math.ceil(Math.ceil(range) / 16);\r\n\t\t\t\tMaps = this.Map16;\r\n\t\t\t\tScale = 16;\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase 'Map32':\r\n\t\t\t\tceilRange = Math.ceil(Math.ceil(range) / 32);\r\n\t\t\t\tMaps = this.Map32;\r\n\t\t\t\tScale = 32;\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase 'auto':\r\n\t\t\tdefault:\r\n\t\t\t\tthrow Error('plz correct select maps to search');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\tceilRange: ceilRange,\r\n\t\t\tScale: Scale,\r\n\t\t\tMaps: Maps,\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetByRange(pos, range = 1, filter = '', self = null, SearchMap = 'auto'){\r\n\t\tlet ret = [];\r\n\t\t\r\n\t\tlet { ceilRange, Scale, Maps } = this._SelectSearchParam(range, SearchMap);\r\n\t\tlet fPos = pos.div(Scale).floor();\r\n\t\t\r\n\t\tfor(let x = -ceilRange; x <= ceilRange; x++)\r\n\t\t\tfor(let y = -ceilRange; y <= ceilRange; y++){\r\n\t\t\t\tif(this._isOutWorld({ x: (x + fPos.x) * Scale, y: (y + fPos.y) * Scale })){ continue; }\r\n\t\t\t\t\r\n\t\t\t\tlet objs = Maps[x + fPos.x][y + fPos.y].inObj;\r\n\t\t\t\t\r\n\t\t\t\tfor(let i in objs){\r\n\t\t\t\t\tif(objs[i].getPos().dist(pos) <= range && objs[i] != self && (objs[i].constructor.name === filter || filter === '')){\r\n\t\t\t\t\t\tret.push(objs[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\treturn ret;\r\n\t}\r\n\t\r\n\tgetByChuckPos(pos, range = 1, filter = '', self = null, SearchMap = 'auto'){\r\n\t\tlet ret = [];\r\n\t\t\r\n\t\tlet { ceilRange, Scale, Maps } = this._SelectSearchParam(range, SearchMap);\r\n\t\tlet fPos = pos.div(Scale).floor();\r\n\t\t\r\n\t\tfor(let x = -ceilRange; x <= ceilRange; x++)\r\n\t\t\tfor(let y = -ceilRange; y <= ceilRange; y++){\r\n\t\t\t\tif(this._isOutWorld({ x: (x + fPos.x) * Scale, y: (y + fPos.y) * Scale })){ continue; }\r\n\t\t\t\t\r\n\t\t\t\tlet objs = Maps[x + fPos.x][y + fPos.y].inObj;\r\n\t\t\t\t\r\n\t\t\t\tfor(let i in objs){\r\n\t\t\t\t\tif(objs[i] != self && (objs[i].constructor.name === filter || filter === '')){\r\n\t\t\t\t\t\tret.push(objs[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\treturn ret;\r\n\t}\r\n\t\r\n\tcheckByChunkPos(pos, range = 1, filter = '', self = null, SearchMap = 'auto'){\r\n\t\tlet { ceilRange, Scale, Maps } = this._SelectSearchParam(range, SearchMap);\r\n\t\tlet fPos = pos.div(Scale).floor();\r\n\t\t\r\n\t\tfor(let x = -ceilRange; x <= ceilRange; x++)\r\n\t\t\tfor(let y = -ceilRange; y <= ceilRange; y++){\r\n\t\t\t\tif(this._isOutWorld({ x: (x + fPos.x) * Scale, y: (y + fPos.y) * Scale })){ continue; }\r\n\t\t\t\t\r\n\t\t\t\tlet objs = Maps[x + fPos.x][y + fPos.y].inObj;\r\n\t\t\t\t\r\n\t\t\t\tfor(let i in objs){\r\n\t\t\t\t\tif(objs[i] != self && (objs[i].constructor.name === filter || filter === '')){\r\n\t\t\t\t\t\treturn objs[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/* TODO: getRandomEntityFromRaduis */\r\n\t\r\n\ttrace(pos, direction, filter = '', self = null, isCollide = true){\r\n\t\tlet endPos = pos.add(direction);\r\n\t\t\r\n\t\tlet step = 1;\r\n\t\t\r\n\t\tlet x = Math.floor(pos.x);\r\n\t\tlet y = Math.floor(pos.y);\r\n\t\tlet diffX = endPos.x - pos.x;\r\n\t\tlet diffY = endPos.y - pos.y;\r\n\t\tlet stepX = Math.sign(diffX);\r\n\t\tlet stepY = Math.sign(diffY);\r\n\t\t\r\n\t\tlet xOffset = endPos.x > pos.x ? (Math.ceil(pos.x) - pos.x) : (pos.x - Math.floor(pos.x));\r\n\t\tlet yOffset = endPos.y > pos.y ? (Math.ceil(pos.y) - pos.y) : (pos.y - Math.floor(pos.y));\r\n\t\t\r\n\t\tlet angle = Math.atan2(-diffY, diffX);\r\n\t\tlet tMaxX = xOffset / Math.cos(angle);\r\n\t\tlet tMaxY = yOffset / Math.sin(angle);\r\n\t\tlet tDeltaX = 1.0 / Math.cos(angle);\r\n\t\tlet tDeltaY = 1.0 / Math.sin(angle);\r\n\t\t\r\n\t\tlet Dist = Math.abs(Math.floor(endPos.x) - Math.floor(pos.x)) + Math.abs(Math.floor(endPos.y) - Math.floor(pos.y));\r\n\t\t\r\n\t\tlet LLPos = new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector(x, y);\r\n\t\t\r\n\t\tfor(let t = 0; t <= Dist; t++){\r\n\t\t\tlet LPos = new _helpers_Vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector(x, y);\r\n\t\t\t\t\r\n\t\t\tif(this._isOutWorld(LPos))\r\n\t\t\t\treturn new _Hit_js__WEBPACK_IMPORTED_MODULE_2__.Hit(LPos, LLPos, null, true, false);\r\n\t\t\t\r\n\t\t\tlet cell = this.Map1[LPos.x][LPos.y];\r\n\t\t\t\r\n\t\t\tif(cell.isWall)\r\n\t\t\t\treturn new _Hit_js__WEBPACK_IMPORTED_MODULE_2__.Hit(LPos, LLPos, null, true, false);\r\n\t\t\t\r\n\t\t\tfor(let i in cell.inObj)\r\n\t\t\t\tif(cell.inObj[i].isCollide === isCollide && cell.inObj[i] != self &&\r\n\t\t\t\t\t(cell.inObj[i].constructor.name === filter || filter === '' || filter instanceof Object && cell.inObj[i] instanceof filter))\r\n\t\t\t\t\treturn new _Hit_js__WEBPACK_IMPORTED_MODULE_2__.Hit(LPos, LLPos, cell.inObj[i], false, false);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (Math.abs(tMaxX) < Math.abs(tMaxY)) {\r\n\t\t\t\ttMaxX += tDeltaX;\r\n\t\t\t\tx += stepX;\r\n\t\t\t} else {\r\n\t\t\t\ttMaxY += tDeltaY;\r\n\t\t\t\ty += stepY;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tLLPos = LPos;\r\n\t\t}\r\n\t\t\r\n\t\treturn new _Hit_js__WEBPACK_IMPORTED_MODULE_2__.Hit(endPos, LLPos, null, false, true);\r\n\t}\r\n\t\r\n\t/* END -- Search function optimazed -- END */\r\n\t\r\n\trender(deltaT){\r\n\t\tlet ctx = this.offscreenBuffering;\r\n\t\t\r\n\t\tctx.save();\r\n\t\t// ctx.clearRect(0, 0, this.width, this.height);\r\n\t\tctx.fillStyle = 'black';\r\n\t\tctx.fillRect(0, 0, this.width, this.height);\r\n\t\tctx.restore();\r\n\t\t\r\n\t\tfor(let k in this.renderList){\r\n\t\t\tlet item = this.renderList[k];\r\n\t\t\t\r\n\t\t\tctx.save();\r\n\t\t\titem.render(deltaT, ctx, this.width, this.height);\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t\t\r\n\t\tctx.drawImage(this.offscreenWallsCanvas, 0, 0, this.width, this.height);\r\n\t\t\r\n\t\tif(this.ondraw instanceof Function)\r\n\t\t\tthis.ondraw.call(this, deltaT, ctx, this.width, this.height);\r\n\t}\r\n\t\r\n\tsetEntityProp(Entity, opts = { draw: true, tick: true }){\r\n\t\tif(opts.draw)\r\n\t\t\tthis.renderList[Entity.id] = Entity;\r\n\t\telse\r\n\t\t\tdelete this.renderList[Entity.id];\r\n\t\t\r\n\t\tif(opts.tick)\r\n\t\t\tthis.tickList[Entity.id] = Entity;\r\n\t\telse\r\n\t\t\tdelete this.tickList[Entity.id];\r\n\t}\r\n\t\r\n\ttick(deltaT){\r\n\t\tfor(let k in this.tickList){\r\n\t\t\tlet item = this.tickList[k];\r\n\t\t\t\r\n\t\t\titem.tick(deltaT / 1000);\r\n\t\t}\r\n\t}\r\n\t\r\n\tdestruct(){\r\n\t\tif(this.ondestruct instanceof Function)\r\n\t\t\tthis.ondestruct.call(this);\r\n\t\t\r\n\t\tfor(let k in this.renderList){\r\n\t\t\tthis.renderList[k].destruct();\r\n\t\t}\r\n\t\t\r\n\t\tfor(let k in this.tickList){\r\n\t\t\tthis.tickList[k].destruct();\r\n\t\t}\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Algos/ant/simulator/world/World.js?");

/***/ }),

/***/ "./src/Algos/claster/main.js":
/*!***********************************!*\
  !*** ./src/Algos/claster/main.js ***!
  \***********************************/
/***/ (() => {

eval("\n\n//# sourceURL=webpack:///./src/Algos/claster/main.js?");

/***/ }),

/***/ "./src/Algos/genetics/main.js":
/*!************************************!*\
  !*** ./src/Algos/genetics/main.js ***!
  \************************************/
/***/ (() => {

eval("\n\n//# sourceURL=webpack:///./src/Algos/genetics/main.js?");

/***/ }),

/***/ "./src/Algos/nn/main.js":
/*!******************************!*\
  !*** ./src/Algos/nn/main.js ***!
  \******************************/
/***/ (() => {

eval("\n\n//# sourceURL=webpack:///./src/Algos/nn/main.js?");

/***/ }),

/***/ "./src/Algos/tree_solution/main.js":
/*!*****************************************!*\
  !*** ./src/Algos/tree_solution/main.js ***!
  \*****************************************/
/***/ (() => {

eval("\n\n//# sourceURL=webpack:///./src/Algos/tree_solution/main.js?");

/***/ }),

/***/ "./src/Config.js":
/*!***********************!*\
  !*** ./src/Config.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Config\": () => (/* binding */ Config)\n/* harmony export */ });\nclass Config{\r\n\t// constructor(){\r\n\t\t\r\n\t// }\r\n\t\r\n\tstatic _cyrb53(str, seed = 0){\r\n\t\tlet h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\r\n\t\t\r\n\t\tfor(let i = 0, ch; i < str.length; i++){\r\n\t\t\tch = str.charCodeAt(i);\r\n\t\t\th1 = Math.imul(h1 ^ ch, 2654435761);\r\n\t\t\th2 = Math.imul(h2 ^ ch, 1597334677);\r\n\t\t}\r\n\t\t\r\n\t\th1 = Math.imul(h1 ^ (h1>>>16), 2246822507) ^ Math.imul(h2 ^ (h2>>>13), 3266489909);\r\n\t\th2 = Math.imul(h2 ^ (h2>>>16), 2246822507) ^ Math.imul(h1 ^ (h1>>>13), 3266489909);\r\n\t\t\r\n\t\treturn 4294967296 * (2097151 & h2) + (h1>>>0);\r\n\t}\r\n\t\r\n\tstatic add(conf, to = null, radio = null, onExtends = {}){\r\n\t\tif(!to) to = $('.config_box > .inputs');\r\n\t\t\r\n\t\tfor(let i in conf){\r\n\t\t\tlet obj = conf[i];\r\n\t\t\tlet insertObj;\r\n\t\t\tlet propObj;\r\n\t\t\t\r\n\t\t\tswitch(obj.type){\r\n\t\t\t\tcase 'vert':\r\n\t\t\t\tcase 'horz':\r\n\t\t\t\t\tinsertObj = $('<div class=\"'+ obj.type +' noWrapper\">');\r\n\t\t\t\t\tpropObj = insertObj;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'text':\r\n\t\t\t\tcase 'number':\r\n\t\t\t\t\tinsertObj = $('<input type=\"'+ obj.type +'\">');\r\n\t\t\t\t\tpropObj = insertObj;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'range':\r\n\t\t\t\t\tinsertObj = $('<label><span></span><input type=\"range\"></label>');\r\n\t\t\t\t\tpropObj = $('input', insertObj);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet span = $('span', insertObj);\r\n\t\t\t\t\t\r\n\t\t\t\t\tspan.data('text', obj.value);\r\n\t\t\t\t\tpropObj.on('input', () => { span.html(span.data('text') + ' ('+ propObj.val() +')'); });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'button':\r\n\t\t\t\t\tinsertObj = $('<button>');\r\n\t\t\t\t\tpropObj = insertObj;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'checkbox':\r\n\t\t\t\t\tinsertObj = $('<label class=\"inline\"><input type=\"checkbox\"></label>');\r\n\t\t\t\t\tpropObj = $('input', insertObj);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'radio':\r\n\t\t\t\t\tinsertObj = $('<input type=\"radio\">');\r\n\t\t\t\t\tpropObj = insertObj;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(radio !== null) insertObj.attr('name', this._cyrb53(obj.radio || radio));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t\tinsertObj = $('<span class=\"string\">');\r\n\t\t\t\t\tpropObj = insertObj;\r\n\t\t\t\t\t\r\n\t\t\t\t\tinsertObj.html(obj.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'wrapper-vert':\r\n\t\t\t\t\tinsertObj = $('<div class=\"vert\"/>');\r\n\t\t\t\t\tpropObj = insertObj;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'wrapper':\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tinsertObj = $('<div/>');\r\n\t\t\t\t\tpropObj = insertObj;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(let prop in obj){\r\n\t\t\t\tif(prop === 'radio') continue;\r\n\t\t\t\tif(prop === 'child') continue;\r\n\t\t\t\tif(prop === 'type') continue;\r\n\t\t\t\tif(prop === 'on') continue;\r\n\t\t\t\tif(obj.type === 'range'){\r\n\t\t\t\t\tif(prop === 'value') continue;\r\n\t\t\t\t\tif(prop === 'init'){\r\n\t\t\t\t\t\tpropObj.attr('value', obj[prop]);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(obj.type === 'string' && prop === 'value') continue;\r\n\t\t\t\t\r\n\t\t\t\tpropObj.attr(prop, obj[prop]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(obj.type === 'range'){\r\n\t\t\t\tlet span = $('span', insertObj);\r\n\t\t\t\t\r\n\t\t\t\tspan.html(span.data('text') + ' ('+ propObj.val() +')');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(obj.on !== undefined)\r\n\t\t\t\tfor(let event in obj.on){\r\n\t\t\t\t\tif(\tevent === 'text' ||\r\n\t\t\t\t\t\tevent === 'number' ||\r\n\t\t\t\t\t\tevent === 'range' ||\r\n\t\t\t\t\t\tevent === 'button' ||\r\n\t\t\t\t\t\tevent === 'checkbox' ||\r\n\t\t\t\t\t\tevent === 'radio' ||\r\n\t\t\t\t\t\tevent === 'span'){\r\n\t\t\t\t\t\tonExtends = $.extend(true, {}, onExtends, { [event]: obj.on[event] });\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tpropObj.on(event, obj.on[event]);\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(let trg in onExtends)\r\n\t\t\t\tif(obj.type == trg)\r\n\t\t\t\t\tfor(let event in onExtends[trg])\r\n\t\t\t\t\t\tpropObj.on(event, onExtends[trg][event]);\r\n\t\t\t\r\n\t\t\tif(obj.child !== undefined)\r\n\t\t\t\tthis.add(obj.child, insertObj, obj.radio || radio, onExtends);\r\n\t\t\t\r\n\t\t\tto.append(insertObj);\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic clear(){\r\n\t\t$('.config_box > .inputs').children().remove();\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/Config.js?");

/***/ }),

/***/ "./src/Render.js":
/*!***********************!*\
  !*** ./src/Render.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CanvasRender\": () => (/* binding */ CanvasRender)\n/* harmony export */ });\n/* harmony import */ var _Algos_ant_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Algos/ant/main.js */ \"./src/Algos/ant/main.js\");\n/* harmony import */ var _Algos_a_star_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Algos/a_star/main.js */ \"./src/Algos/a_star/main.js\");\n/* harmony import */ var _Config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Config.js */ \"./src/Config.js\");\n/* harmony import */ var _Algos_helpers_Matrix_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Algos/_helpers/Matrix.js */ \"./src/Algos/_helpers/Matrix.js\");\n\r\n\r\n\r\n\r\n\r\nclass CanvasRender{\r\n\tconstructor(ctx, width = null, height = null){\r\n\t\tconst { width: ctxWidth, height: ctxHeight } = ctx.canvas.getBoundingClientRect();\r\n\t\t\r\n\t\tthis.onresize = null;\r\n\t\tthis.ondraw = null;\r\n\t\t\r\n\t\tthis.onmmove = null;\r\n\t\tthis.onmdown = null;\r\n\t\tthis.onmenter = null;\r\n\t\t\r\n\t\tthis.ctx = ctx;\r\n\t\t\r\n\t\tthis._fixed = { width: width, height: height };\r\n\t\t\r\n\t\tthis.width = ctxWidth;\r\n\t\tthis.height = ctxHeight;\r\n\t\t\r\n\t\tthis.averageFPS = [];\r\n\t\tthis.maxFPS = 165;\r\n\t\tthis.lastFNow;\r\n\t\tthis.lastTNow;\r\n\t\t\r\n\t\tthis.lastPerfomans;\r\n\t\tthis.SpeedMultiplier = 1;\r\n\t\t\r\n\t\tctx.canvas.width = ctxWidth;\r\n\t\tctx.canvas.height = ctxHeight;\r\n\t\t\r\n\t\t$(ctx.canvas).on('selectstart', function(){ return false; });\r\n\t\t\r\n\t\t$(ctx.canvas).on('mousemove', this.mmove.bind(this));\r\n\t\t$(ctx.canvas).on('mousedown', this.mdown.bind(this));\r\n\t\t$(ctx.canvas).on('mouseenter', this.menter.bind(this));\r\n\t\t\r\n\t\t$(window).on('resize', this.resize.bind(this));\r\n\t\trequestAnimationFrame(this.draw.bind(this));\r\n\t}\r\n\t\r\n\thello(){\r\n\t\tlet imgHello = $('<img/>');\r\n\t\tthis.imgHello = imgHello;\r\n\t\t\r\n\t\timgHello[0].src = 'img/5.png';\r\n\t\t\r\n\t\tlet helloDraw = function(render, a1, a2, a3){\r\n\t\t\tlet ctx = render.ctx;\r\n\t\t\tlet ctxWidth = render.width;\r\n\t\t\tlet ctxHeight = render.height;\r\n\t\t\t\r\n\t\t\tctx.fillStyle = 'black';\r\n\t\t\tctx.fillRect(0, 0, ctxWidth, ctxHeight);\r\n\t\t\t\r\n\t\t\tlet aspect = this.naturalWidth / this.naturalHeight;\r\n\t\t\tlet multiplier = ctxWidth / this.naturalWidth;\r\n\t\t\t\r\n\t\t\tlet height = this.naturalWidth / aspect * multiplier;\r\n\t\t\tlet width = this.naturalWidth * multiplier;\r\n\t\t\t\r\n\t\t\tif(height > ctxHeight){\r\n\t\t\t\tmultiplier = ctxHeight / this.naturalHeight;\r\n\t\t\t\t\r\n\t\t\t\theight = this.naturalHeight * multiplier;\r\n\t\t\t\twidth = this.naturalHeight * aspect * multiplier;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet sX = (ctxWidth - width) / 2;\r\n\t\t\tlet sY = (ctxHeight - height) / 2;\r\n\t\t\t\r\n\t\t\tctx.drawImage(this, sX, sY, width, height);\r\n\t\t}.bind(imgHello[0], this);\r\n\t\t\r\n\t\timgHello.on('load', helloDraw);\r\n\t\tthis.onresize = helloDraw;\r\n\t}\r\n\t\r\n\ta_star(){\r\n\t\tlet a_star = new _Algos_a_star_main_js__WEBPACK_IMPORTED_MODULE_1__.Algo_a_star(new _Algos_helpers_Matrix_js__WEBPACK_IMPORTED_MODULE_3__.Matrix(this.width, this.height), this.width, this.height);\r\n\t\ta_star.ondraw = function(render, deltaT, out){\r\n\t\t\tlet ctx = render.ctx;\r\n\t\t\tlet ctxWidth = render.width;\r\n\t\t\tlet ctxHeight = render.height;\r\n\r\n\t\t\tctx.clearRect(0, 0, ctxWidth, ctxHeight);\r\n\t\t\t//ctx.save();\r\n\t\t\t\t//ctx.fillStyle = out.color;\r\n\t\t\t\t//ctx.fillRect(out.x, out.y, 2, 2);\r\n\t\t\tctx.restore();\r\n\t\t}.bind(a_star, this);\r\n\r\n\t\t_Config_js__WEBPACK_IMPORTED_MODULE_2__.Config.clear();\r\n\t\t_Config_js__WEBPACK_IMPORTED_MODULE_2__.Config.add([\r\n\t\t\t{\r\n\t\t\t\ttype: 'wrapper-vert',\r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'horz',\r\n\t\t\t\t\t\ton: {\r\n\t\t\t\t\t\t\ttext:{\r\n\t\t\t\t\t\t\t\tinput: function(e){\r\n\t\t\t\t\t\t\t\t\tthis.value = /\\d+/.exec(this.value)?.[0] ?? '';\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchild: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\t\t\tplaceholder: 'Width',\r\n\t\t\t\t\t\t\t\tid: 'conf-width',\r\n\t\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\t\t\tplaceholder: 'Height',\r\n\t\t\t\t\t\t\t\tid: 'conf-height',\r\n\t\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'button',\r\n\t\t\t\t\t\tvalue: 'Create maze',\r\n\t\t\t\t\t\ton: { click: function(){\r\n\t\t\t\t\t\t\tlet width = parseInt($('#conf-width').val())+2;\r\n\t\t\t\t\t\t\tlet height = parseInt($('#conf-height').val())+2;\r\n\t\t\t\t\t\t\ta_star.resize(new _Algos_helpers_Matrix_js__WEBPACK_IMPORTED_MODULE_3__.Matrix(width || this.width,  height|| this.height), width || this.width, height|| this.height);\r\n\t\t\t\t\t\t\ta_star.labirint();},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'wrapper-vert',\r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'horz',\r\n\t\t\t\t\t\ton: {\r\n\t\t\t\t\t\t\ttext:{\r\n\t\t\t\t\t\t\t\tinput: function(e){\r\n\t\t\t\t\t\t\t\t\tthis.value = /\\d+/.exec(this.value)?.[0] ?? '';\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchild: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\t\t\tplaceholder: 'start_x',\r\n\t\t\t\t\t\t\t\tid: 'start_x',\r\n\t\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\t\t\tplaceholder: 'start_y',\r\n\t\t\t\t\t\t\t\tid: 'start_y',\r\n\t\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\t\t\tplaceholder: 'end_x',\r\n\t\t\t\t\t\t\t\tid: 'end_x',\r\n\t\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\t\t\tplaceholder: 'end_y',\r\n\t\t\t\t\t\t\t\tid: 'end_y',\r\n\t\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'button',\r\n\t\t\t\t\t\tvalue: 'Find Put',\r\n\t\t\t\t\t\ton: { click: function(){\r\n\t\t\t\t\t\t\tlet start_x = parseInt($('#start_x').val());\r\n\t\t\t\t\t\t\tlet start_y = parseInt($('#start_y').val()) ;\r\n\t\t\t\t\t\t\tlet end_x = parseInt($('#end_x').val());\r\n\t\t\t\t\t\t\tlet end_y = parseInt($('#end_y').val());\r\n\t\t\t\t\t\t\ta_star.algos_a_star(start_x, start_y, end_x, end_y)},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t\r\n\t\t]);\r\n\r\n\t\tlet updater = a_star.update();\r\n\t\t\r\n\t\tthis.ondraw = updater.next.bind(updater);\r\n\t}\r\n\r\n\tant(){\r\n\t\tlet cursorPos = { x: 0, y: 0 };\r\n\t\tlet Ant = new _Algos_ant_main_js__WEBPACK_IMPORTED_MODULE_0__.Algo_Ant(this.width, this.height);\r\n\t\tlet setCursorPos = (e) => { cursorPos.x = e.offsetX; cursorPos.y = e.offsetY; };\r\n\t\t\r\n\t\tAnt.ondraw = function(render, deltaT, ctxImage){\r\n\t\t\tlet ctx = render.ctx;\r\n\t\t\tlet ctxWidth = render.width;\r\n\t\t\tlet ctxHeight = render.height;\r\n\t\t\t\r\n\t\t\tctx.drawImage(ctxImage.canvas, 0, 0, ctxWidth, ctxHeight);\r\n\t\t}.bind(Ant, this);\r\n\t\t\r\n\t\tlet BrushSwitch = 'Walls';\r\n\t\tlet BrushSize = 10;\r\n\t\t\r\n\t\tlet CalcAspect = function(x, y, repeat = false){\r\n\t\t\tlet aspX = Ant.world.width / this.width;\r\n\t\t\tlet aspY = Ant.world.height / this.height;\r\n\t\t\t\r\n\t\t\treturn repeat ? [x * aspX, y * aspY, x * aspX, y * aspY] : [x * aspX, y * aspY];\r\n\t\t}.bind(this);\r\n\t\t\r\n\t\tthis.onmdown = setCursorPos;\r\n\t\tthis.onmenter = setCursorPos;\r\n\t\tthis.onmmove = function(e){\r\n\t\t\tif(e.buttons !== 1) return;\r\n\t\t\tlet { x, y } = cursorPos;\r\n\t\t\t\r\n\t\t\tsetCursorPos(e);\r\n\t\t\t\r\n\t\t\tlet aspX = Ant.world.width / this.width;\r\n\t\t\tlet aspY = Ant.world.height / this.height;\r\n\t\t\t\r\n\t\t\tswitch(BrushSwitch){\r\n\t\t\t\tcase 'Walls':\r\n\t\t\t\t\tAnt.spawn(x * aspX, y * aspY, cursorPos.x * aspX, cursorPos.y * aspY, BrushSize, 'Wall');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'Food':\r\n\t\t\t\t\tAnt.spawn(x * aspX, y * aspY, cursorPos.x * aspX, cursorPos.y * aspY, BrushSize, 'Food');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'Erase':\r\n\t\t\t\t\tAnt.erase(x * aspX, y * aspY, cursorPos.x * aspX, cursorPos.y * aspY, BrushSize, '');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'Marker_food':\r\n\t\t\t\t\tAnt.spawn(x * aspX, y * aspY, cursorPos.x * aspX, cursorPos.y * aspY, BrushSize, 'Marker_food');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\t\t\r\n\t\t_Config_js__WEBPACK_IMPORTED_MODULE_2__.Config.clear();\r\n\t\t_Config_js__WEBPACK_IMPORTED_MODULE_2__.Config.add([\r\n\t\t\t{\r\n\t\t\t\ttype: 'wrapper-vert',\r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'range',\r\n\t\t\t\t\t\tvalue: 'FPS',\r\n\t\t\t\t\t\tstep: 1,\r\n\t\t\t\t\t\tmin: 1,\r\n\t\t\t\t\t\tmax: 165,\r\n\t\t\t\t\t\tinit: 165,\r\n\t\t\t\t\t\ton: {\r\n\t\t\t\t\t\t\tinput: function(e){ this.maxFPS = $(e.target).val(); }.bind(this),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'range',\r\n\t\t\t\t\t\tvalue: 'Speed multiplier',\r\n\t\t\t\t\t\tstep: 0.1,\r\n\t\t\t\t\t\tmin: 0.1,\r\n\t\t\t\t\t\tmax: 10,\r\n\t\t\t\t\t\tinit: 1,\r\n\t\t\t\t\t\ton: {\r\n\t\t\t\t\t\t\tinput: function(e){ this.SpeedMultiplier = $(e.target).val(); }.bind(this),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'wrapper-vert',\r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tvalue: 'Brush',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'horz',\r\n\t\t\t\t\t\tradio: 'Brush',\r\n\t\t\t\t\t\ton: { radio: { click: function(){ BrushSwitch = this.value }, }, },\r\n\t\t\t\t\t\tchild: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'radio',\r\n\t\t\t\t\t\t\t\tvalue: 'Walls',\r\n\t\t\t\t\t\t\t\tchecked: true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'radio',\r\n\t\t\t\t\t\t\t\tvalue: 'Food',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'radio',\r\n\t\t\t\t\t\t\t\tvalue: 'Erase',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'radio',\r\n\t\t\t\t\t\t\t\tvalue: 'Marker_food',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'range',\r\n\t\t\t\t\t\tvalue: 'Size',\r\n\t\t\t\t\t\tmin: 1,\r\n\t\t\t\t\t\tinit: 10,\r\n\t\t\t\t\t\tmax: 100,\r\n\t\t\t\t\t\ton: { input: function(){ BrushSize = this.value }, },\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'wrapper',\r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'button',\r\n\t\t\t\t\t\tvalue: 'Spawn Colony',\r\n\t\t\t\t\t\ton: { click: function(e){\r\n\t\t\t\t\t\t\t$(this.ctx.canvas).on('click.conf', function(e){ Ant.spawn(...CalcAspect(e.offsetX,e.offsetY, true), 0, 'Colony'); $(this).off('click.conf'); });\r\n\t\t\t\t\t\t}.bind(this), },\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'wrapper-vert',\r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'horz',\r\n\t\t\t\t\t\ton: {\r\n\t\t\t\t\t\t\ttext:{\r\n\t\t\t\t\t\t\t\tinput: function(e){\r\n\t\t\t\t\t\t\t\t\tthis.value = /\\d+/.exec(this.value)?.[0] ?? '';\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchild: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\t\t\tplaceholder: 'Width',\r\n\t\t\t\t\t\t\t\tid: 'conf-width',\r\n\t\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\t\t\tplaceholder: 'Height',\r\n\t\t\t\t\t\t\t\tid: 'conf-height',\r\n\t\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'button',\r\n\t\t\t\t\t\tvalue: 'Set',\r\n\t\t\t\t\t\ton: { click: () => { Ant.resize(parseInt($('#conf-width').val()) || this.width, parseInt($('#conf-height').val()) || this.height); }, },\r\n\t\t\t\t\t},\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'wrapper',\r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'range',\r\n\t\t\t\t\t\tvalue: 'test change ang 0 entity',\r\n\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\tinit: 180,\r\n\t\t\t\t\t\tmax: 360,\r\n\t\t\t\t\t\ton: { input: function(){ Ant.world.tickList[0].rotate(parseInt(180 - this.value) / (180 / Math.PI)); this.value = 180; }, },\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t]);\r\n\t\t\r\n\t\tlet updater = Ant.update();\r\n\t\t\r\n\t\tthis.ondraw = updater.next.bind(updater);\r\n\t}\r\n\t\r\n\t_drawFps(deltaT, ctx){\r\n\t\tthis.averageFPS.push(deltaT);\r\n\t\tif(this.averageFPS.length > 20)\r\n\t\t\tthis.averageFPS.splice(0, 1);\r\n\t\t\r\n\t\tlet sum = 0;\r\n\t\t\r\n\t\tfor(let i in this.averageFPS)\r\n\t\t\tsum += this.averageFPS[i];\r\n\t\t\r\n\t\tlet fps = \"FPS: \" + Math.round(1000 / (sum / this.averageFPS.length), 2);\r\n\t\t\r\n\t\tctx.save();\r\n\t\tctx.font = \"2.5em monospace\";\r\n\t\tctx.strokeStyle = 'black';\r\n\t\tctx.fillStyle = 'red';\r\n\t\tctx.textAlign = 'right';\r\n\t\tctx.textBaseline = 'top';\r\n\t\tctx.lineWidth = 8;\r\n\t\tctx.strokeText(fps, ctx.canvas.width - 10, 10);\r\n\t\tctx.fillText(fps, ctx.canvas.width - 10, 10);\r\n\t\tctx.restore();\r\n\t}\r\n\t\r\n\tdraw(now){\r\n\t\tif(!this.lastPerfomans){ this.lastPerfomans = performance.now(); }\r\n\t\tif(!this.lastTNow){ this.lastTNow = now; }\r\n\t\tif(!this.lastFNow){ this.lastFNow = now; }\r\n\t\t\r\n\t\tlet perf = performance.now();\r\n\t\t\r\n\t\tlet deltaF = now - this.lastFNow;\r\n\t\tlet delay = (1000 / this.maxFPS);\r\n\t\t\r\n\t\tif(deltaF >= delay){\r\n\t\t\tlet deltaT = now - this.lastTNow;\r\n\t\t\t\r\n\t\t\tthis.lastFNow = now - (Math.min(deltaF, 1000) - delay);\r\n\t\t\tthis.lastTNow = now;\r\n\t\t\t\r\n\t\t\tif(this.ondraw instanceof Function)\r\n\t\t\t\tthis.ondraw.call(this, deltaT * this.SpeedMultiplier);\r\n\t\t\t\r\n\t\t\tthis._drawFps(perf - this.lastPerfomans, this.ctx);\r\n\t\t\tthis.lastPerfomans = perf;\r\n\t\t}\r\n\t\t\r\n\t\trequestAnimationFrame(this.draw.bind(this));\r\n\t}\r\n\t\r\n\tresize(){\r\n\t\tif(this._fixed.height && this._fixed.width) return;\r\n\t\t\r\n\t\tif(this._fixed.height) this.ctx.canvas.height = this._fixed.height; else this.ctx.canvas.height = this.ctx.canvas.clientHeight;\r\n\t\tif(this._fixed.width)  this.ctx.canvas.width  = this._fixed.width;  else this.ctx.canvas.width  = this.ctx.canvas.clientWidth;\r\n\t\t\r\n\t\tthis.height = this.ctx.canvas.height;\r\n\t\tthis.width = this.ctx.canvas.width;\r\n\t\t\r\n\t\tif(this.onresize instanceof Function)\r\n\t\t\tthis.onresize.call(this);\r\n\t}\r\n\t\r\n\tmdown(...args){\r\n\t\tif(this.onmdown instanceof Function)\r\n\t\t\tthis.onmdown.call(this, ...args);\r\n\t}\r\n\t\r\n\tmenter(...args){\r\n\t\tif(this.onmenter instanceof Function)\r\n\t\t\tthis.onmenter.call(this, ...args);\r\n\t}\r\n\t\r\n\tmmove(...args){\r\n\t\tif(this.onmmove instanceof Function)\r\n\t\t\tthis.onmmove.call(this, ...args);\r\n\t}\r\n};\n\n//# sourceURL=webpack:///./src/Render.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Render.js */ \"./src/Render.js\");\n/* harmony import */ var _Algos_helpers_Matrix_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Algos/_helpers/Matrix.js */ \"./src/Algos/_helpers/Matrix.js\");\n\r\n\r\n// import { Config } from './Config.js';\r\n$(function(){\r\n\tlet canvas = $('#canvas_demo_algo');\r\n\tlet ctx = canvas[0].getContext('2d');\r\n\tlet render = new _Render_js__WEBPACK_IMPORTED_MODULE_0__.CanvasRender(ctx);\r\n\t\r\n\t$('.algo_nav a').on('click', function(e){\r\n\t\tif($(this).attr('active')) return;\r\n\t\t\r\n\t\t$('a', $(this).parent()).attr('active', null);\r\n\t\t$(this).attr('active', true);\r\n\t\t\r\n\t\trender[$(this).data('algo')]();\r\n\t\t\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t}).on('mousedown', function(e){\r\n\t\treturn false;\r\n\t});\r\n\t\r\n\t/*Config.setConfig([\r\n\t\t{\r\n\t\t\ttype: 'wrapper',\r\n\t\t\tradio: 'da',\r\n\t\t\tchild: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: 'vert',\r\n\t\t\t\t\tchild: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttype: 'horz',\r\n\t\t\t\t\t\t\tchild: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttype: 'radio',\r\n\t\t\t\t\t\t\t\t\tvalue: 'da',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttype: 'radio',\r\n\t\t\t\t\t\t\t\t\tvalue: 'agacb',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttype: 'horz',\r\n\t\t\t\t\t\t\tchild: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttype: 'radio',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\t\t\t\tplaceholder: 'aga',\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: 'range',\r\n\t\t\t\t\tvalue: 'd',\r\n\t\t\t\t\tmin: 0,\r\n\t\t\t\t\tmax: 100,\r\n\t\t\t\t\tstep: 1,\r\n\t\t\t\t\tinit: 25,\r\n\t\t\t\t\t\r\n\t\t\t\t\ton: {\r\n\t\t\t\t\t\t// click: () => alert('agasb'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'wrapper',\r\n\t\t\tchild: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: 'text'\r\n\t\t\t\t},\r\n\t\t\t]\r\n\t\t}\r\n\t]);*/\r\n\t\r\n\trender.hello();\r\n\t\r\n\t// $('[data-algo=\"ant\"]').click();\r\n\t$('[data-algo=\"a_star\"]').click();\r\n});\n\n//# sourceURL=webpack:///./src/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("./src/Config.js");
/******/ 	__webpack_require__("./src/main.js");
/******/ 	__webpack_require__("./src/Render.js");
/******/ 	__webpack_require__("./src/Algos/ant/main.js");
/******/ 	__webpack_require__("./src/Algos/a_star/main.js");
/******/ 	__webpack_require__("./src/Algos/claster/main.js");
/******/ 	__webpack_require__("./src/Algos/genetics/main.js");
/******/ 	__webpack_require__("./src/Algos/nn/main.js");
/******/ 	__webpack_require__("./src/Algos/_helpers/Algo.js");
/******/ 	__webpack_require__("./src/Algos/_helpers/LinearMatrix.js");
/******/ 	__webpack_require__("./src/Algos/_helpers/Matrix.js");
/******/ 	__webpack_require__("./src/Algos/_helpers/Random.js");
/******/ 	__webpack_require__("./src/Algos/_helpers/Vector.js");
/******/ 	__webpack_require__("./src/Algos/_helpers/Vector_.js");
/******/ 	__webpack_require__("./src/Algos/_helpers/Victor.js");
/******/ 	__webpack_require__("./src/Algos/tree_solution/main.js");
/******/ 	__webpack_require__("./src/Algos/ant/simulator/Figure.js");
/******/ 	__webpack_require__("./src/Algos/ant/simulator/world/Hit.js");
/******/ 	__webpack_require__("./src/Algos/ant/simulator/world/World.js");
/******/ 	__webpack_require__("./src/Algos/ant/simulator/entity/Ant_base.js");
/******/ 	__webpack_require__("./src/Algos/ant/simulator/entity/Colony.js");
/******/ 	__webpack_require__("./src/Algos/ant/simulator/entity/Entity_base.js");
/******/ 	__webpack_require__("./src/Algos/ant/simulator/entity/Entity_stackable.js");
/******/ 	__webpack_require__("./src/Algos/ant/simulator/entity/Food.js");
/******/ 	__webpack_require__("./src/Algos/ant/simulator/entity/Food_sprite.js");
/******/ 	__webpack_require__("./src/Algos/ant/simulator/entity/Marker.js");
/******/ 	__webpack_require__("./src/Algos/ant/simulator/entity/Marker_food.js");
/******/ 	__webpack_require__("./src/Algos/ant/simulator/entity/Marker_home.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/Algos/ant/simulator/entity/Wall.js");
/******/ 	
/******/ })()
;